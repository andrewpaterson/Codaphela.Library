#include "ClassDefines.h"
#include "ObjectWriter.h"
#include "ObjectReader.h"
#include "PointerContainer.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CPointerContainer::Class(void)
{
	M_Pointer(mp);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CPointerContainer> CPointerContainer::Init(void)
{
	PreInit();
	mp = NULL;;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CPointerContainer> CPointerContainer::Init(CPointer& pPointer)
{
	PreInit();
	mp = pPointer;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CPointerContainer> CPointerContainer::Init(CEmbeddedObject* pcObject)
{
	PreInit();
	mp = pcObject;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CPointerContainer::Free(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CPointerContainer::Clear()
{
	mp = NULL;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CNamedPointerContainer::Class(void)
{
	M_Pointer(mp);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CNamedPointerContainer> CNamedPointerContainer::Init(void)
{
	PreInit();
	mp = NULL;;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CNamedPointerContainer> CNamedPointerContainer::Init(CPointer& pPointer)
{
	PreInit();
	mp = pPointer;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CNamedPointerContainer> CNamedPointerContainer::Init(CEmbeddedObject* pcObject)
{
	PreInit();
	mp = pcObject;
	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CNamedPointerContainer::Free(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CNamedPointerContainer::Clear()
{
	mp = NULL;
}

