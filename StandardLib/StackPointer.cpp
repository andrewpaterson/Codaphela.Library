#include "StackPointer.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CStackPointer::Init(CPointer* pcPointer)
{
	mpcPointer = pcPointer;
	mpcNext = NULL;
	mbUsed = TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CStackPointer::Kill(void)
{
	mpcPointer = NULL;
	mpcNext = NULL;
	mbUsed = FALSE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CStackPointer::SetNext(CStackPointer* pcNext)
{
	mpcNext = pcNext;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CStackPointer::NumPointers(void)
{
	CStackPointer* pcNext;

	int iCount;

	iCount = 1;
	pcNext = mpcNext;
	while (pcNext != NULL)
	{
		iCount++;
		pcNext = pcNext->mpcNext;
	}
	
	return iCount;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CStackPointer* CStackPointer::FindLast(void)
{
	CStackPointer* pcNext;

	pcNext = this;
	while (pcNext->mpcNext != NULL)
	{
	}

	return pcNext;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CStackPointer* CStackPointer::GetNext(void)
{
	return mpcNext;
}
