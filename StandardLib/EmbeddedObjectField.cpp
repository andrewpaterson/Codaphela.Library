#include "Class.h"
#include "Classes.h"
#include "EmbeddedObjectField.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedObjectField::Init(CClass* pcFieldClass, uint32 uiOffset, CClass* pcContainingClass, char* szName)
{
	CField::Init(pcFieldClass, uiOffset, pcContainingClass, szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedObjectField::Kill(void)
{
	CField::Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CEmbeddedObjectField::IsEmbeddedObject(void)
{
	return true;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
uint32 CEmbeddedObjectField::GetSizeOf(void)
{
	return mpcFieldClass->GetSizeOf();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CBaseObject* CEmbeddedObjectField::GetEmbeddedObject(CBaseObject* pcFieldContainer)
{
	CBaseObject*	pcEmbeddedObject;

	pcEmbeddedObject = (CBaseObject*)RemapSinglePointer(pcFieldContainer, muiOffset);
	return pcEmbeddedObject;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CEmbeddedObjectField::GetNameOffset(void)
{
	return sizeof(CEmbeddedObjectField);
}