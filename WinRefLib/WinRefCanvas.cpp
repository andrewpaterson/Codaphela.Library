#include "WindowLib/Canvas.h"
#include "WinRefWindowFactory.h"
#include "WinRefHelper.h"
#include "WinRefCanvas.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CWinRefCanvas::Init(CCanvas* pcCanvas, CNativeWindowFactory* pcWindowFactory)
{
	CNativeCanvas::Init(pcCanvas, pcWindowFactory);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CWinRefCanvas::CreateNativeCanvas()
{
    CWinRefWindowFactory*   pcFactory; 

    pcFactory = (CWinRefWindowFactory*)mpcWindowFactory;

    return false;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CWinRefCanvas::DestroyNativeCanvas(void)
{
    return false;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
uint8* CWinRefCanvas::GetPixelData(void)
{
    return NULL;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CWinRefCanvas::CopyCanvas(CNativeCanvas* pcSourceCanvas)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CWinRefCanvas::FillRect(CRectangle* pcRectangle, ARGB32 sColour)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CWinRefCanvas::SetPixel(int32 iX, int32 iY, ARGB32 sColour)
{
}

