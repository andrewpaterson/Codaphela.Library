#include <thread>
#include "ThreadsDone.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CThreadsDone::Init(void)
{
	miThreadsStopped = 0;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CThreadsDone::ThreadStateChanged(CThread* pcThread, EThreadState eState)
{
	if (eState == TS_Stopped)
	{
		miThreadsStopped++;
		pcThread = NULL;  //Appease the compiler.
	}
}

//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CThreadsDone::Wait(int iCount)
{
	while (miThreadsStopped < iCount)
	{
		std::this_thread::yield();
	}
}

