#include "JavaFloat.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaFloat::Init(float32 fValue)
{
	mfValue = fValue;
	meType = JFT_float32;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaFloat::Init(float64 fValue)
{
	mfValue = fValue;
	meType = JFT_float64;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaFloat::Kill(void)
{
	mfValue = 0.0f;
	meType = JFT_Unknown;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaFloat::Print(CChars* pszDest)
{
	if (meType == JFT_float32)
	{
		pszDest->Append((float32)mfValue, 7);
		pszDest->Append('f');
	}
	else if (meType == JFT_float64)
	{
		pszDest->Append(mfValue, 16);
		pszDest->Append('d');
	}
	else
	{
		pszDest->Append("[float?]");
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CJavaFloat::GetType(void)
{
	if (meType == JFT_float32)
	{
		return "Literal (float32)";
	}
	else if (meType == JFT_float64)
	{
		return "Literal (float64)";
	}
	else
	{
		return CJavaLiteral::GetType();
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaFloat::IsFloat(void) { return TRUE; }

