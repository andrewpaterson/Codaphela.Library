#include "JavaSyntaxType.h"
#include "JavaSyntaxGeneric.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaSyntaxGeneric::Init(CJavaSyntaxTree* pcTree, CJavaSyntax* pcParent)
{
	CJavaSyntax::Init(pcTree, pcParent);
	mapc.Init();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaSyntaxGeneric::Kill(void)
{
	mapc.Kill();
	CJavaSyntax::Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CJavaSyntaxGeneric::GetType(void)
{
	return "Generic";
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaSyntaxGeneric::Print(CChars* pszDest, int iDepth)
{
	int						i;
	CJavaSyntaxTypeCommon*	pcType;

	CJavaSyntax::Print(pszDest, iDepth);
	pszDest->AppendNewLine();

	for (i = 0; i < mapc.NumElements(); i++)
	{
		pcType = mapc.GetPtr(i);
		pcType->Print(pszDest, iDepth + 1);
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaSyntaxGeneric::IsGeneric(void)
{
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaSyntaxGeneric::AddType(CJavaSyntaxTypeCommon* pcType)
{
	mapc.Add(pcType);
}

