#include "BaseLib/NewLine.h"
#include "JavaTokenComment.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenComment::Init(char* szComment, int iLength)
{
	CJavaToken::Init();
	mszComment = szComment;
	miLength = iLength;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenComment::Kill(void)
{
	mszComment = NULL;
	miLength = 0;
	CJavaToken::Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenComment::Print(CChars* pszDest)
{
	int		iNewLines;
	
	iNewLines = CountLineFeeds(mszComment, miLength);
	if (iNewLines > 0)
	{
		pszDest->Append("/*");
		pszDest->Append(mszComment);
		pszDest->Replace("\n", " \\n ");
		pszDest->Append("*/");
	}
	else
	{
		pszDest->Append("//");
		pszDest->Append(mszComment);
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaTokenComment::Is(char* szComment)
{
	int	iLength = StrLen(szComment);

	if (miLength != iLength)
	{
		return FALSE;
	}
	else
	{
		return memcmp(mszComment, szComment, iLength) == 0;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenComment::GetComment(CChars* psz)
{
	psz->Append(mszComment, miLength);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CJavaTokenComment::GetType(void) {	return "Comment"; }
BOOL CJavaTokenComment::IsComment(void) { return TRUE; }

