#include "BaseLib/EscapeCodes.h"
#include "JavaTokenCharacter.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenCharacter::Init(char c)
{
	CJavaTokenLiteral::Init(JLT_Character);
	mc = c;
	meType = JCT_char8;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenCharacter::Init(char16 c)
{
	mc = c;
	meType = JCT_char16;
	CJavaTokenLiteral::Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenCharacter::Kill(void)
{
	meType = JCT_Unknown;
	mc = -1;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CJavaTokenCharacter::GetType(void)
{
	if (meType == JCT_char8)
	{
		return "Literal (char8)";
	}
	else if (meType == JCT_char16)
	{
		return "Literal (char16)";
	}
	else
	{
		return CJavaTokenLiteral::GetType();
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaTokenCharacter::Is(char8 c)
{
	if (meType == JCT_char8)
	{
		return (char)mc == c;
	}
	else
	{
		return FALSE;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaTokenCharacter::Is(char16 c)
{
	if (meType == JCT_char16)
	{
		return mc == c;
	}
	else
	{
		return FALSE;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CJavaTokenCharacter::Print(CChars* pszDest)
{
	char	sz[10];

	pszDest->Append('\'');
	if (mc <= 255)
	{
		pszDest->Append(GetEscapeString((char)mc, sz));
	}
	else
	{
		pszDest->Append(GetEscapeString(mc, sz));
	}
	pszDest->Append('\'');
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CJavaTokenCharacter::IsCharacter(void)
{
	return TRUE;
}


