#include "BaseLib/StdRandom.h"
#include "Words.h"


CArrayChars gaszArchaicWords;
CArrayChars gaszArchaicDefinitions;
CArrayChars gaszCommonWords;


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void GetArchaicDefinitions(CArrayChars* pasz)
{
	pasz->Add("abroad: out of doors");
	pasz->Add("accouchement: birthing");
	pasz->Add("advertisement: a notice to readers in a book");
	pasz->Add("afeard / afeared: frightened");
	pasz->Add("affright: frighten(someone)");
	pasz->Add("ague: malaria or a similar illness");
	pasz->Add("aliment: food; nourishment");
	pasz->Add("ambuscade: an ambush");
	pasz->Add("animalcule: a microscopic animal");
	pasz->Add("apothecary: a person who prepared and sold medicine");
	pasz->Add("appetency: a longing or desire");
	pasz->Add("assay: attempt");
	pasz->Add("asunder: apart");
	pasz->Add("audition: the power of hearing");
	pasz->Add("aught: anything at all");
	pasz->Add("avaunt: go away");
	pasz->Add("bane: poison");
	pasz->Add("baseborn: of low birth or social standing");
	pasz->Add("bedlam: an asylum");
	pasz->Add("behold: see or observe");
	pasz->Add("behoof: benefit or advantage");
	pasz->Add("beldam: an old woman");
	pasz->Add("bethink oneself of: remember; recollect");
	pasz->Add("betimes: in good time; early");
	pasz->Add("bibliopole: a dealer in books");
	pasz->Add("bijoux: jewellery; trinkets");
	pasz->Add("billow: a large sea wave");
	pasz->Add("blackguard: a scoundrel");
	pasz->Add("blow: produce flowers or be in flower");
	pasz->Add("bodkin: a dagger");
	pasz->Add("bootless(of a task) ineffectual; useless");
	pasz->Add("breech: a person's buttocks");
	pasz->Add("bridewell: a prison or reform school for petty offenders");
	pasz->Add("brimstone: sulphur");
	pasz->Add("bruit: a report or rumour");
	pasz->Add("buck: a fashionable and daring young man");
	pasz->Add("bumper: a generous glass of an alcoholic drink");
	pasz->Add("burgess: a full citizen of a town or borough");
	pasz->Add("buss: a kiss");
	pasz->Add("caboose: a kitchen on a ship's deck");
	pasz->Add("cadet: a younger son or daughter");
	pasz->Add("caducity: the infirmity of old age; senility");
	pasz->Add("camelopard: a giraffe");
	pasz->Add("cannonade: bombard");
	pasz->Add("carl: a man of low birth");
	pasz->Add("ceil: line or plaster the roof of(a building)");
	pasz->Add("champaign: open level countryside");
	pasz->Add("chapman: a peddler");
	pasz->Add("chicane: deceive; hoodwink");
	pasz->Add("circumjacent: surrounding");
	pasz->Add("cicisbeo: a married woman's male companion or lover");
	pasz->Add("cispontine: on the north side of the Thames in London");
	pasz->Add("cleanse: restore to health");
	pasz->Add("clerk: a literate or scholarly person");
	pasz->Add("clew: a ball of thread");
	pasz->Add("clout: a piece of cloth or clothing");
	pasz->Add("collogue: talk confidentially");
	pasz->Add("commend: entrust someone or something to");
	pasz->Add("commons: provisions shared in common; rations");
	pasz->Add("communicant: a person who imparts information");
	pasz->Add("compass: encircle or surround");
	pasz->Add("compeer: a companion or close associate");
	pasz->Add("con: study attentively or learn by heart(a piece of writing)");
	pasz->Add("condition: social position");
	pasz->Add("conjure: implore(someone) to do something");
	pasz->Add("contemn: treat or regard with contempt");
	pasz->Add("contumely: insolent or insulting language or treatment");
	pasz->Add("cordwainer: a shoemaker");
	pasz->Add("corrupt: rotten or putrid");
	pasz->Add("corse: a corpse");
	pasz->Add("cottier: a rural labourer living in a cottage");
	pasz->Add("coxcomb: a vain and conceited man; a dandy");
	pasz->Add("coz: cousin");
	pasz->Add("crinkum - crankum: elaborate decoration or detail");
	pasz->Add("crookback: a person with a hunchback");
	pasz->Add("crumpet: a person's head");
	pasz->Add("cruse: an earthenware pot or jar");
	pasz->Add("cully: a friendly form of address for a man");
	pasz->Add("cutpurse: a pickpocket");
	pasz->Add("dame: an elderly or mature woman");
	pasz->Add("damsel: a young unmarried woman");
	pasz->Add("dandiprat: a young or insignificant person");
	pasz->Add("darbies: handcuffs");
	pasz->Add("dark: ignorant");
	pasz->Add("degrade: reduce to a lower rank, especially as a punishment");
	pasz->Add("degree: social or official rank");
	pasz->Add("delate: report(an offence)");
	pasz->Add("demesne: a region or domain");
	pasz->Add("demit: resign from(an office or position)");
	pasz->Add("demoralize: corrupt the morals of");
	pasz->Add("dight: clothed or equipped");
	pasz->Add("discover: divulge(a secret)");
	pasz->Add("disport: frolic");
	pasz->Add("dispraise: censure or criticize");
	pasz->Add("divers: of varying types; several");
	pasz->Add("doit: a very small amount of money");
	pasz->Add("dot: a dowry from which only the interest or annual income was available to the husband");
	pasz->Add("doxy: a lover or mistress");
	pasz->Add("drab: a slovenly woman");
	pasz->Add("drought: thirst");
	pasz->Add("egad: exclamation of surprise, anger, or affirmation");
	pasz->Add("embarrass: hamper or impede");
	pasz->Add("embouchure: the mouth of a river");
	pasz->Add("equipage: gear; equipment");
	pasz->Add("ere: before(in time)");
	pasz->Add("espousal: a marriage or engagement");
	pasz->Add("estate: a particular state, period, or condition in life");
	pasz->Add("esurient: hungry");
	pasz->Add("expectations: one's prospects of inheritance");
	pasz->Add("expiry: death");
	pasz->Add("fain: pleased or willing under the circumstances");
	pasz->Add("fainéant: an idle or ineffective person");
	pasz->Add("fair: beautiful");
	pasz->Add("fandangle: a useless or purely ornamental thing");
	pasz->Add("fane: a shrine or temple");
	pasz->Add("fare: travel");
	pasz->Add("fell: an animal skin; a pelt");
	pasz->Add("feminal: feminine; womanly");
	pasz->Add("fervent: hot or glowing");
	pasz->Add("fie: exclamation used to express disgust or outrage");
	pasz->Add("filibeg: a kilt");
	pasz->Add("fishwife: a woman who sells fish");
	pasz->Add("fizgig: a silly or flirtatious young woman");
	pasz->Add("flux: diarrhoea or dysentery");
	pasz->Add("forfend: avert or prevent(something evil or unpleasant)");
	pasz->Add("forsooth: indeed");
	pasz->Add("fourscore: eighty");
	pasz->Add("freak: a whim");
	pasz->Add("frore: frozen or frosty");
	pasz->Add("froward(of a person) difficult to deal with; contrary");
	pasz->Add("fruit: offspring");
	pasz->Add("fudge: nonsense");
	pasz->Add("furbish: polish(a weapon)");
	pasz->Add("gadzooks: an expression of surprise or annoyance");
	pasz->Add("gage: a valued object deposited as a guarantee");
	pasz->Add("gallant: a dashing gentleman");
	pasz->Add("gammer: an old woman");
	pasz->Add("garland: a literary anthology");
	pasz->Add("garth: a yard or garden");
	pasz->Add("gaud: a trinket");
	pasz->Add("gentle: noble or courteous");
	pasz->Add("glabriety: baldness");
	pasz->Add("glaciate: freeze over");
	pasz->Add("glebe: a meadow");
	pasz->Add("glim: a candle");
	pasz->Add("go - cart: a baby walker");
	pasz->Add("God's acre: a churchyard");
	pasz->Add("goodly: attractive, excellent, or virtuous");
	pasz->Add("goody(with a name) an elderly woman of humble position");
	pasz->Add("grateful: received with gratitude");
	pasz->Add("greenwood: a forest");
	pasz->Add("grimalkin: a cat");
	pasz->Add("gudgeon: a credulous person");
	pasz->Add("guerdon: a reward");
	pasz->Add("gyve: a fetter or shackle");
	pasz->Add("habiliment: clothing");
	pasz->Add("halt: lame");
	pasz->Add("handmaid: a female servant");
	pasz->Add("hearken: listen");
	pasz->Add("hence: from here");
	pasz->Add("herbary: a herb garden");
	pasz->Add("hereat: as a result of this");
	pasz->Add("hereunto: to this document");
	pasz->Add("hereupon: after or as a result of this");
	pasz->Add("hie: go quickly");
	pasz->Add("hight: named");
	pasz->Add("hither: to or toward this place");
	pasz->Add("hoar: frost");
	pasz->Add("horse - coper: a person who deals in horses");
	pasz->Add("horseless carriage: a car");
	pasz->Add("host: an army");
	pasz->Add("howbeit: nevertheless");
	pasz->Add("husbandman: a farmer");
	pasz->Add("immedicable: untreatable");
	pasz->Add("imminent: overhanging");
	pasz->Add("indite: write; compose");
	pasz->Add("inscribe: enter the name of(someone) on a list");
	pasz->Add("in sooth: actually");
	pasz->Add("intelligence: news");
	pasz->Add("intelligencer: a person who gathers intelligence");
	pasz->Add("invest: surround(a place) in order to besiege or blockade it");
	pasz->Add("iron horse: a steam locomotive");
	pasz->Add("izzard: the letter Z");
	pasz->Add("jade: a bad - tempered or disreputable woman");
	pasz->Add("jakes: an outdoor toilet");
	pasz->Add("job: turn a public office or a position of trust to private advantage");
	pasz->Add("kickshaw: a fancy but insubstantial cooked dish");
	pasz->Add("kine: cows collectively");
	pasz->Add("kirtle: a woman's gown or a man's tunic");
	pasz->Add("knave: a dishonest or unscrupulous man");
	pasz->Add("larcener: thief");
	pasz->Add("latchet: a narrow thong or lace for fastening a shoe or sandal");
	pasz->Add("laud: praise");
	pasz->Add("laver: a basin or similar container used for washing oneself");
	pasz->Add("learn: teach");
	pasz->Add("leech: a doctor or healer");
	pasz->Add("leman: a lover or sweetheart");
	pasz->Add("let: hinder");
	pasz->Add("levant: abscond leaving unpaid debts");
	pasz->Add("Levant: the eastern part of the Mediterranean");
	pasz->Add("levy: a body of enlisted troops");
	pasz->Add("lief: as happily; as gladly");
	pasz->Add("like enough: probably");
	pasz->Add("loathly: repulsive");
	pasz->Add("lordling: a minor lord");
	pasz->Add("love apple: a tomato");
	pasz->Add("Lucifer: a match");
	pasz->Add("lurdan: an idle or incompetent person");
	pasz->Add("lying - in: seclusion before and after childbirth");
	pasz->Add("magdalen: a reformed prostitute");
	pasz->Add("mage: a magician or learned person");
	pasz->Add("magnify: glorify; extol");
	pasz->Add("maid: a girl or young woman");
	pasz->Add("malapert: presumptuous and impudent");
	pasz->Add("malison: a curse");
	pasz->Add("man - at - arms: a soldier");
	pasz->Add("marry: an expression of surprise, indignation, or emphatic assertion");
	pasz->Add("mayhap: perhaps; possibly");
	pasz->Add("mazed: bewildered");
	pasz->Add("measure: a dance");
	pasz->Add("meat: food of any kind");
	pasz->Add("mechanical: a manual worker");
	pasz->Add("meet: suitable or proper");
	pasz->Add("melodist: a singer");
	pasz->Add("methinks: it seems to me");
	pasz->Add("moil: drudgery");
	pasz->Add("mooncalf: a foolish person");
	pasz->Add("morrow, the: the following day");
	pasz->Add("mummer: an actor in the theatre");
	pasz->Add("natheless: nevertheless");
	pasz->Add("natural: a person born with impaired intelligence");
	pasz->Add("naught: nothing");
	pasz->Add("nay: no");
	pasz->Add("neat: a bovine animal or animals");
	pasz->Add("nice: fastidious");
	pasz->Add("nigh: near");
	pasz->Add("nithing: a contemptible or despicable person");
	pasz->Add("noise(something) about: talk about or make known publicly");
	pasz->Add("nubbing - cheat: a gallows");
	pasz->Add("numbles: a deer's entrails as food");
	pasz->Add("orison: a prayer");
	pasz->Add("orts: scraps; remains");
	pasz->Add("otherwhere: elsewhere");
	pasz->Add("otiose: lazy; slothful");
	pasz->Add("overbrim: spill; overflow");
	pasz->Add("overleap: jump over or across");
	pasz->Add("overset: capsize; flip over");
	pasz->Add("pale: an area within determined bounds or subject to a particular jurisdiction");
	pasz->Add("palfrey: a docile riding horse");
	pasz->Add("pate: a person's head");
	pasz->Add("paynim: a pagan");
	pasz->Add("peccant: sinful; offending");
	pasz->Add("peeler: a police officer");
	pasz->Add("pelf: money, especially when gained dishonestly");
	pasz->Add("peradventure: perhaps");
	pasz->Add("perchance: by some chance");
	pasz->Add("peregrinate: travel or wander from place to place");
	pasz->Add("periapt: a charm or amulet");
	pasz->Add("pest: bubonic plague");
	pasz->Add("pestilence: a fatal epidemic disease, especially bubonic plague");
	pasz->Add("peterman: a thief or safecracker");
	pasz->Add("physic: medicinal drugs or medical treatment");
	pasz->Add("picaroon: a scoundrel");
	pasz->Add("piepowder: a traveller or an itinerant merchant or trader");
	pasz->Add("pismire: an ant");
	pasz->Add("pistoleer: a soldier armed with a pistol");
	pasz->Add("plain over: lament; cry over");
	pasz->Add("plight: solemnly pledge or promise(faith or loyalty)");
	pasz->Add("pollard: an animal that has lost its horns or cast its antlers");
	pasz->Add("poltroon: an utter coward");
	pasz->Add("popinjay: a parrot");
	pasz->Add("pore on: think about");
	pasz->Add("portage: the action of carrying or transporting");
	pasz->Add("portion: a dowry");
	pasz->Add("portion: a person's destiny or lot");
	pasz->Add("posy: a short motto or line of verse inscribed inside a ring");
	pasz->Add("potation: a beverage");
	pasz->Add("pouncet - box: a small box with a perforated lid used for holding a substance impregnated with perfume");
	pasz->Add("prithee: please");
	pasz->Add("profess: teach(a subject) as a professor");
	pasz->Add("purblind: short - sighted");
	pasz->Add("purfle: an ornamental or embroidered edge of a garment");
	pasz->Add("pythoness: a woman believed to be possessed by a spirit and to be able to foresee the future");
	pasz->Add("quaggy: marshy or boggy");
	pasz->Add("quality: high social standing");
	pasz->Add("quean: an impudent girl or woman");
	pasz->Add("quick, the: the living");
	pasz->Add("quidnunc: an inquisitive, gossipy person");
	pasz->Add("quiz: look intently at(someone)");
	pasz->Add("quoth: said(in I / he / she quoth)");
	pasz->Add("rack(of a cloud) be driven by the wind");
	pasz->Add("raiment: clothing");
	pasz->Add("rapscallion: a mischievous person");
	pasz->Add("rathe - ripe(of fruit) ripening early in the year; (of a person) precocious");
	pasz->Add("reave: carry out a plundering raid");
	pasz->Add("receipt: a recipe");
	pasz->Add("recipe: a medical prescription");
	pasz->Add("recompense: punish or reward appropriately");
	pasz->Add("recreant: cowardly");
	pasz->Add("rede: advice or counsel");
	pasz->Add("reduce: besiege and capture(a town or fortress)");
	pasz->Add("relieve: make(something) stand out");
	pasz->Add("remit: diminish");
	pasz->Add("repair: an abode or haunt");
	pasz->Add("repulsive: lacking friendliness or sympathy");
	pasz->Add("riband: a ribbon");
	pasz->Add("rover: a pirate");
	pasz->Add("rude: ignorant and uneducated");
	pasz->Add("ruth: a feeling of pity, distress, or grief");
	pasz->Add("sables: black mourning clothes");
	pasz->Add("sacring: the consecration of a bishop, a sovereign, or the Eucharistic elements");
	pasz->Add("saddle - bow: the pommel of a saddle");
	pasz->Add("salamander: a red - hot iron or poker");
	pasz->Add("sanative: healing");
	pasz->Add("sanguinary: involving or causing much bloodshed");
	pasz->Add("sap: make(a building, etc.) insecure by removing its foundations");
	pasz->Add("saturnism: lead poisoning");
	pasz->Add("scantling: a specimen, sample, or small amount");
	pasz->Add("scapegrace: a mischievous person; a rascal");
	pasz->Add("scaramouch: a boastful but cowardly person");
	pasz->Add("schoolman: a teacher");
	pasz->Add("science: knowledge");
	pasz->Add("sciolist: a person who pretends to be knowledgeable");
	pasz->Add("scold: a woman who nags or grumbles constantly");
	pasz->Add("scot: a tax - like payment");
	pasz->Add("scrag: a neck");
	pasz->Add("scruple: a very small amount of something, especially a quality");
	pasz->Add("scullion: a menial servant");
	pasz->Add("scurvy: worthless or contemptible");
	pasz->Add("sea coal: mineral coal");
	pasz->Add("sea smoke: fog");
	pasz->Add("seizing: a length of cord or rope on board a ship");
	pasz->Add("sennight: a week");
	pasz->Add("sepulture: burial");
	pasz->Add("shambles: a slaughterhouse");
	pasz->Add("shrift: forgiveness");
	pasz->Add("shrive(of a priest) absolve(a person making a confession)");
	pasz->Add("silly: helpless; defenceless");
	pasz->Add("sippet: a small piece of bread or toast for dipping into soup or sauce");
	pasz->Add("skirt: an edge, border, or extreme part");
	pasz->Add("slay: kill in a violent way");
	pasz->Add("slipshod(of shoes) worn down at the heel");
	pasz->Add("slugabed: a lazy person who stays in bed late");
	pasz->Add("small beer: weak beer");
	pasz->Add("smite: defeat or conquer");
	pasz->Add("soak: drink heavily");
	pasz->Add("soft tack: bread, especially as rations for sailors or soldiers");
	pasz->Add("soil: a stain");
	pasz->Add("sooth: truth");
	pasz->Add("sore: extremely; severely");
	pasz->Add("speed: success; prosperity");
	pasz->Add("spence: a pantry or larder");
	pasz->Add("statuary: a sculptor");
	pasz->Add("steed: a horse");
	pasz->Add("stoup: a container for drinking beer, etc.; a flagon");
	pasz->Add("stripe: a blow with a lash");
	pasz->Add("strumpet: a female prostitute or a promiscuous woman");
	pasz->Add("success: a good or bad outcome");
	pasz->Add("suffer: endure; tolerate");
	pasz->Add("surety, of / for a: for certain");
	pasz->Add("swain: a country youth");
	pasz->Add("swash: flamboyantly swagger about or wield a sword");
	pasz->Add("sweeting: darling");
	pasz->Add("sweetmeat: an item of confectionery or sweet food");
	pasz->Add("taiga: a forest");
	pasz->Add("tantivy: a rapid gallop or ride");
	pasz->Add("tapster: a person who serves at a bar");
	pasz->Add("tenter: a person in charge of something, especially factory machinery");
	pasz->Add("thenceforth: from that time, place, or point onward");
	pasz->Add("thereunto: to that");
	pasz->Add("therewith: with or in the thing mentioned");
	pasz->Add("thither: to or toward that place");
	pasz->Add("thrice: three times");
	pasz->Add("tilt with: engage in a contest with");
	pasz->Add("timbrel: a tambourine or similar instrument");
	pasz->Add("tithe: a tenth");
	pasz->Add("tocsin: an alarm bell or signal");
	pasz->Add("tope: drink to excess");
	pasz->Add("trespass: a sin or offence");
	pasz->Add("trig: neat and smart");
	pasz->Add("trigon: a triangle");
	pasz->Add("troth: faith or loyalty when pledged in a solemn undertaking");
	pasz->Add("truck: an exchange or transaction");
	pasz->Add("turnkey: a jailer");
	pasz->Add("tweeny: a maid who assisted both the cook and the housemaid");
	pasz->Add("twelvemonth: a year");
	pasz->Add("uncle: a pawnbroker");
	pasz->Add("uncommon: remarkably");
	pasz->Add("up to snuff: up to the required standard");
	pasz->Add("usher: an assistant teacher");
	pasz->Add("vale: a farewell; a send - off");
	pasz->Add("varlet: an unprincipled rogue");
	pasz->Add("venery: hunting");
	pasz->Add("verily: truly; certainly");
	pasz->Add("verse: a line of poetry");
	pasz->Add("very: real; genuine");
	pasz->Add("virtue: virginity");
	pasz->Add("visionary: existing only in the imagination");
	pasz->Add("wain: a wagon or cart");
	pasz->Add("wait on / upon: pay a respectful visit to");
	pasz->Add("waits: street singers of Christmas carols");
	pasz->Add("ware of: aware of");
	pasz->Add("wassail: revelry");
	pasz->Add("wast: second person singular past of be");
	pasz->Add("watch: remain awake as religious observance");
	pasz->Add("watchful: wakeful");
	pasz->Add("watchword: a military password");
	pasz->Add("weasand: the oesophagus or gullet");
	pasz->Add("ween: think or suppose; be of the opinion");
	pasz->Add("wench: a girl or young woman");
	pasz->Add("whence: from what place or source");
	pasz->Add("whereat: at which");
	pasz->Add("wherefore: for what reason");
	pasz->Add("wherewith: with or by which");
	pasz->Add("whilom: formerly");
	pasz->Add("white goods: domestic linen");
	pasz->Add("whither: to what place or state");
	pasz->Add("wife: a woman, especially an old or uneducated one");
	pasz->Add("wight: a person of a specified kind");
	pasz->Add("wise: manner, way, or extent");
	pasz->Add("withal: in addition");
	pasz->Add("without: outside");
	pasz->Add("wondrous: wonderfully");
	pasz->Add("wont: accustomed");
	pasz->Add("wonted: usual");
	pasz->Add("wool - stapler: a dealer in wool");
	pasz->Add("wright: a maker or builder");
	pasz->Add("yclept: by the name of");
	pasz->Add("ye: you");
	pasz->Add("yea: yes");
	pasz->Add("yoke: the amount of land that one pair of oxen could plough in a day");
	pasz->Add("yonder: over there");
	pasz->Add("zounds: an expression of surprise or indignation");
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void GetArchaicWords(CArrayChars* pasz)
{
	int		i;
	CChars* pszDefinition;
	int		iIndex;
	CChars	sz;

	for (i = 0; i < gaszArchaicDefinitions.NumElements(); i++)
	{
		pszDefinition = gaszArchaicDefinitions.Get(i);
		iIndex = pszDefinition->Find(':');
		if (iIndex != -1)
		{
			sz.Init(pszDefinition->Text(), 0, iIndex);
			gaszArchaicWords.Add(sz);
			sz.Kill();
		}
		else
		{
			gaszArchaicWords.Add(pszDefinition->Text());
		}
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void GetCommonWords(CArrayChars* pasz)
{
	int		i;
	char*	sz;

	pasz->Add("a");
	pasz->Add("ability");
	pasz->Add("able");
	pasz->Add("about");
	pasz->Add("above");
	pasz->Add("accept");
	pasz->Add("according");
	pasz->Add("account");
	pasz->Add("across");
	pasz->Add("act");
	pasz->Add("action");
	pasz->Add("activity");
	pasz->Add("actually");
	pasz->Add("add");
	pasz->Add("address");
	pasz->Add("administration");
	pasz->Add("admit");
	pasz->Add("adult");
	pasz->Add("affect");
	pasz->Add("after");
	pasz->Add("again");
	pasz->Add("against");
	pasz->Add("age");
	pasz->Add("agency");
	pasz->Add("agent");
	pasz->Add("ago");
	pasz->Add("agree");
	pasz->Add("agreement");
	pasz->Add("ahead");
	pasz->Add("air");
	pasz->Add("all");
	pasz->Add("allow");
	pasz->Add("almost");
	pasz->Add("alone");
	pasz->Add("along");
	pasz->Add("already");
	pasz->Add("also");
	pasz->Add("although");
	pasz->Add("always");
	pasz->Add("American");
	pasz->Add("among");
	pasz->Add("amount");
	pasz->Add("analysis");
	pasz->Add("and");
	pasz->Add("animal");
	pasz->Add("another");
	pasz->Add("answer");
	pasz->Add("any");
	pasz->Add("anyone");
	pasz->Add("anything");
	pasz->Add("appear");
	pasz->Add("apply");
	pasz->Add("approach");
	pasz->Add("area");
	pasz->Add("argue");
	pasz->Add("arm");
	pasz->Add("around");
	pasz->Add("arrive");
	pasz->Add("art");
	pasz->Add("article");
	pasz->Add("artist");
	pasz->Add("as");
	pasz->Add("ask");
	pasz->Add("assume");
	pasz->Add("at");
	pasz->Add("attack");
	pasz->Add("attention");
	pasz->Add("attorney");
	pasz->Add("audience");
	pasz->Add("author");
	pasz->Add("authority");
	pasz->Add("available");
	pasz->Add("avoid");
	pasz->Add("away");
	pasz->Add("baby");
	pasz->Add("back");
	pasz->Add("bad");
	pasz->Add("bag");
	pasz->Add("ball");
	pasz->Add("bank");
	pasz->Add("bar");
	pasz->Add("base");
	pasz->Add("be");
	pasz->Add("beat");
	pasz->Add("beautiful");
	pasz->Add("because");
	pasz->Add("become");
	pasz->Add("bed");
	pasz->Add("before");
	pasz->Add("begin");
	pasz->Add("behavior");
	pasz->Add("behind");
	pasz->Add("believe");
	pasz->Add("benefit");
	pasz->Add("best");
	pasz->Add("better");
	pasz->Add("between");
	pasz->Add("beyond");
	pasz->Add("big");
	pasz->Add("bill");
	pasz->Add("billion");
	pasz->Add("bit");
	pasz->Add("black");
	pasz->Add("blood");
	pasz->Add("blue");
	pasz->Add("board");
	pasz->Add("body");
	pasz->Add("book");
	pasz->Add("born");
	pasz->Add("both");
	pasz->Add("box");
	pasz->Add("boy");
	pasz->Add("break");
	pasz->Add("bring");
	pasz->Add("brother");
	pasz->Add("budget");
	pasz->Add("build");
	pasz->Add("building");
	pasz->Add("business");
	pasz->Add("but");
	pasz->Add("buy");
	pasz->Add("by");
	pasz->Add("call");
	pasz->Add("camera");
	pasz->Add("campaign");
	pasz->Add("can");
	pasz->Add("cancer");
	pasz->Add("candidate");
	pasz->Add("capital");
	pasz->Add("car");
	pasz->Add("card");
	pasz->Add("care");
	pasz->Add("career");
	pasz->Add("carry");
	pasz->Add("case");
	pasz->Add("catch");
	pasz->Add("cause");
	pasz->Add("cell");
	pasz->Add("center");
	pasz->Add("central");
	pasz->Add("century");
	pasz->Add("certain");
	pasz->Add("certainly");
	pasz->Add("chair");
	pasz->Add("challenge");
	pasz->Add("chance");
	pasz->Add("change");
	pasz->Add("character");
	pasz->Add("charge");
	pasz->Add("check");
	pasz->Add("child");
	pasz->Add("choice");
	pasz->Add("choose");
	pasz->Add("church");
	pasz->Add("citizen");
	pasz->Add("city");
	pasz->Add("civil");
	pasz->Add("claim");
	pasz->Add("class");
	pasz->Add("clear");
	pasz->Add("clearly");
	pasz->Add("close");
	pasz->Add("coach");
	pasz->Add("cold");
	pasz->Add("collection");
	pasz->Add("college");
	pasz->Add("color");
	pasz->Add("come");
	pasz->Add("commercial");
	pasz->Add("common");
	pasz->Add("community");
	pasz->Add("company");
	pasz->Add("compare");
	pasz->Add("computer");
	pasz->Add("concern");
	pasz->Add("condition");
	pasz->Add("conference");
	pasz->Add("Congress");
	pasz->Add("consider");
	pasz->Add("consumer");
	pasz->Add("contain");
	pasz->Add("continue");
	pasz->Add("control");
	pasz->Add("cost");
	pasz->Add("could");
	pasz->Add("country");
	pasz->Add("couple");
	pasz->Add("course");
	pasz->Add("court");
	pasz->Add("cover");
	pasz->Add("create");
	pasz->Add("crime");
	pasz->Add("cultural");
	pasz->Add("culture");
	pasz->Add("cup");
	pasz->Add("current");
	pasz->Add("customer");
	pasz->Add("cut");
	pasz->Add("dark");
	pasz->Add("data");
	pasz->Add("daughter");
	pasz->Add("day");
	pasz->Add("dead");
	pasz->Add("deal");
	pasz->Add("death");
	pasz->Add("debate");
	pasz->Add("decade");
	pasz->Add("decide");
	pasz->Add("decision");
	pasz->Add("deep");
	pasz->Add("defense");
	pasz->Add("degree");
	pasz->Add("Democrat");
	pasz->Add("democratic");
	pasz->Add("describe");
	pasz->Add("design");
	pasz->Add("despite");
	pasz->Add("detail");
	pasz->Add("determine");
	pasz->Add("develop");
	pasz->Add("development");
	pasz->Add("die");
	pasz->Add("difference");
	pasz->Add("different");
	pasz->Add("difficult");
	pasz->Add("dinner");
	pasz->Add("direction");
	pasz->Add("director");
	pasz->Add("discover");
	pasz->Add("discuss");
	pasz->Add("discussion");
	pasz->Add("disease");
	pasz->Add("do");
	pasz->Add("doctor");
	pasz->Add("dog");
	pasz->Add("door");
	pasz->Add("down");
	pasz->Add("draw");
	pasz->Add("dream");
	pasz->Add("drive");
	pasz->Add("drop");
	pasz->Add("drug");
	pasz->Add("during");
	pasz->Add("each");
	pasz->Add("early");
	pasz->Add("east");
	pasz->Add("easy");
	pasz->Add("eat");
	pasz->Add("economic");
	pasz->Add("economy");
	pasz->Add("edge");
	pasz->Add("education");
	pasz->Add("effect");
	pasz->Add("effort");
	pasz->Add("eight");
	pasz->Add("either");
	pasz->Add("election");
	pasz->Add("else");
	pasz->Add("employee");
	pasz->Add("end");
	pasz->Add("energy");
	pasz->Add("enjoy");
	pasz->Add("enough");
	pasz->Add("enter");
	pasz->Add("entire");
	pasz->Add("environment");
	pasz->Add("environmental");
	pasz->Add("especially");
	pasz->Add("establish");
	pasz->Add("even");
	pasz->Add("evening");
	pasz->Add("event");
	pasz->Add("ever");
	pasz->Add("every");
	pasz->Add("everybody");
	pasz->Add("everyone");
	pasz->Add("everything");
	pasz->Add("evidence");
	pasz->Add("exactly");
	pasz->Add("example");
	pasz->Add("executive");
	pasz->Add("exist");
	pasz->Add("expect");
	pasz->Add("experience");
	pasz->Add("expert");
	pasz->Add("explain");
	pasz->Add("eye");
	pasz->Add("face");
	pasz->Add("fact");
	pasz->Add("factor");
	pasz->Add("fail");
	pasz->Add("fall");
	pasz->Add("family");
	pasz->Add("far");
	pasz->Add("fast");
	pasz->Add("father");
	pasz->Add("fear");
	pasz->Add("federal");
	pasz->Add("feel");
	pasz->Add("feeling");
	pasz->Add("few");
	pasz->Add("field");
	pasz->Add("fight");
	pasz->Add("figure");
	pasz->Add("fill");
	pasz->Add("film");
	pasz->Add("final");
	pasz->Add("finally");
	pasz->Add("financial");
	pasz->Add("find");
	pasz->Add("fine");
	pasz->Add("finger");
	pasz->Add("finish");
	pasz->Add("fire");
	pasz->Add("firm");
	pasz->Add("first");
	pasz->Add("fish");
	pasz->Add("five");
	pasz->Add("floor");
	pasz->Add("fly");
	pasz->Add("focus");
	pasz->Add("follow");
	pasz->Add("food");
	pasz->Add("foot");
	pasz->Add("for");
	pasz->Add("force");
	pasz->Add("foreign");
	pasz->Add("forget");
	pasz->Add("form");
	pasz->Add("former");
	pasz->Add("forward");
	pasz->Add("four");
	pasz->Add("free");
	pasz->Add("friend");
	pasz->Add("from");
	pasz->Add("front");
	pasz->Add("full");
	pasz->Add("fund");
	pasz->Add("future");
	pasz->Add("game");
	pasz->Add("garden");
	pasz->Add("gas");
	pasz->Add("general");
	pasz->Add("generation");
	pasz->Add("get");
	pasz->Add("girl");
	pasz->Add("give");
	pasz->Add("glass");
	pasz->Add("go");
	pasz->Add("goal");
	pasz->Add("good");
	pasz->Add("government");
	pasz->Add("great");
	pasz->Add("green");
	pasz->Add("ground");
	pasz->Add("group");
	pasz->Add("grow");
	pasz->Add("growth");
	pasz->Add("guess");
	pasz->Add("gun");
	pasz->Add("guy");
	pasz->Add("hair");
	pasz->Add("half");
	pasz->Add("hand");
	pasz->Add("hang");
	pasz->Add("happen");
	pasz->Add("happy");
	pasz->Add("hard");
	pasz->Add("have");
	pasz->Add("he");
	pasz->Add("head");
	pasz->Add("health");
	pasz->Add("hear");
	pasz->Add("heart");
	pasz->Add("heat");
	pasz->Add("heavy");
	pasz->Add("help");
	pasz->Add("her");
	pasz->Add("here");
	pasz->Add("herself");
	pasz->Add("high");
	pasz->Add("him");
	pasz->Add("himself");
	pasz->Add("his");
	pasz->Add("history");
	pasz->Add("hit");
	pasz->Add("hold");
	pasz->Add("home");
	pasz->Add("hope");
	pasz->Add("hospital");
	pasz->Add("hot");
	pasz->Add("hotel");
	pasz->Add("hour");
	pasz->Add("house");
	pasz->Add("how");
	pasz->Add("however");
	pasz->Add("huge");
	pasz->Add("human");
	pasz->Add("hundred");
	pasz->Add("husband");
	pasz->Add("I");
	pasz->Add("idea");
	pasz->Add("identify");
	pasz->Add("if");
	pasz->Add("image");
	pasz->Add("imagine");
	pasz->Add("impact");
	pasz->Add("important");
	pasz->Add("improve");
	pasz->Add("in");
	pasz->Add("include");
	pasz->Add("including");
	pasz->Add("increase");
	pasz->Add("indeed");
	pasz->Add("indicate");
	pasz->Add("individual");
	pasz->Add("industry");
	pasz->Add("information");
	pasz->Add("inside");
	pasz->Add("instead");
	pasz->Add("institution");
	pasz->Add("interest");
	pasz->Add("interesting");
	pasz->Add("international");
	pasz->Add("interview");
	pasz->Add("into");
	pasz->Add("investment");
	pasz->Add("involve");
	pasz->Add("issue");
	pasz->Add("it");
	pasz->Add("item");
	pasz->Add("its");
	pasz->Add("itself");
	pasz->Add("job");
	pasz->Add("join");
	pasz->Add("just");
	pasz->Add("keep");
	pasz->Add("key");
	pasz->Add("kid");
	pasz->Add("kill");
	pasz->Add("kind");
	pasz->Add("kitchen");
	pasz->Add("know");
	pasz->Add("knowledge");
	pasz->Add("land");
	pasz->Add("language");
	pasz->Add("large");
	pasz->Add("last");
	pasz->Add("late");
	pasz->Add("later");
	pasz->Add("laugh");
	pasz->Add("law");
	pasz->Add("lawyer");
	pasz->Add("lay");
	pasz->Add("lead");
	pasz->Add("leader");
	pasz->Add("learn");
	pasz->Add("least");
	pasz->Add("leave");
	pasz->Add("left");
	pasz->Add("leg");
	pasz->Add("legal");
	pasz->Add("less");
	pasz->Add("let");
	pasz->Add("letter");
	pasz->Add("level");
	pasz->Add("lie");
	pasz->Add("life");
	pasz->Add("light");
	pasz->Add("like");
	pasz->Add("likely");
	pasz->Add("line");
	pasz->Add("list");
	pasz->Add("listen");
	pasz->Add("little");
	pasz->Add("live");
	pasz->Add("local");
	pasz->Add("long");
	pasz->Add("look");
	pasz->Add("lose");
	pasz->Add("loss");
	pasz->Add("lot");
	pasz->Add("love");
	pasz->Add("low");
	pasz->Add("machine");
	pasz->Add("magazine");
	pasz->Add("main");
	pasz->Add("maintain");
	pasz->Add("major");
	pasz->Add("majority");
	pasz->Add("make");
	pasz->Add("man");
	pasz->Add("manage");
	pasz->Add("management");
	pasz->Add("manager");
	pasz->Add("many");
	pasz->Add("market");
	pasz->Add("marriage");
	pasz->Add("material");
	pasz->Add("matter");
	pasz->Add("may");
	pasz->Add("maybe");
	pasz->Add("me");
	pasz->Add("mean");
	pasz->Add("measure");
	pasz->Add("media");
	pasz->Add("medical");
	pasz->Add("meet");
	pasz->Add("meeting");
	pasz->Add("member");
	pasz->Add("memory");
	pasz->Add("mention");
	pasz->Add("message");
	pasz->Add("method");
	pasz->Add("middle");
	pasz->Add("might");
	pasz->Add("military");
	pasz->Add("million");
	pasz->Add("mind");
	pasz->Add("minute");
	pasz->Add("miss");
	pasz->Add("mission");
	pasz->Add("model");
	pasz->Add("modern");
	pasz->Add("moment");
	pasz->Add("money");
	pasz->Add("month");
	pasz->Add("more");
	pasz->Add("morning");
	pasz->Add("most");
	pasz->Add("mother");
	pasz->Add("mouth");
	pasz->Add("move");
	pasz->Add("movement");
	pasz->Add("movie");
	pasz->Add("Mr");
	pasz->Add("Mrs");
	pasz->Add("much");
	pasz->Add("music");
	pasz->Add("must");
	pasz->Add("my");
	pasz->Add("myself");
	pasz->Add("n't");
	pasz->Add("name");
	pasz->Add("nation");
	pasz->Add("national");
	pasz->Add("natural");
	pasz->Add("nature");
	pasz->Add("near");
	pasz->Add("nearly");
	pasz->Add("necessary");
	pasz->Add("need");
	pasz->Add("network");
	pasz->Add("never");
	pasz->Add("new");
	pasz->Add("news");
	pasz->Add("newspaper");
	pasz->Add("next");
	pasz->Add("nice");
	pasz->Add("night");
	pasz->Add("no");
	pasz->Add("none");
	pasz->Add("nor");
	pasz->Add("north");
	pasz->Add("not");
	pasz->Add("note");
	pasz->Add("nothing");
	pasz->Add("notice");
	pasz->Add("now");
	pasz->Add("number");
	pasz->Add("occur");
	pasz->Add("of");
	pasz->Add("off");
	pasz->Add("offer");
	pasz->Add("office");
	pasz->Add("officer");
	pasz->Add("official");
	pasz->Add("often");
	pasz->Add("oh");
	pasz->Add("oil");
	pasz->Add("ok");
	pasz->Add("old");
	pasz->Add("on");
	pasz->Add("once");
	pasz->Add("one");
	pasz->Add("only");
	pasz->Add("onto");
	pasz->Add("open");
	pasz->Add("operation");
	pasz->Add("opportunity");
	pasz->Add("option");
	pasz->Add("or");
	pasz->Add("order");
	pasz->Add("organization");
	pasz->Add("other");
	pasz->Add("others");
	pasz->Add("our");
	pasz->Add("out");
	pasz->Add("outside");
	pasz->Add("over");
	pasz->Add("own");
	pasz->Add("owner");
	pasz->Add("page");
	pasz->Add("pain");
	pasz->Add("painting");
	pasz->Add("paper");
	pasz->Add("parent");
	pasz->Add("part");
	pasz->Add("participant");
	pasz->Add("particular");
	pasz->Add("particularly");
	pasz->Add("partner");
	pasz->Add("party");
	pasz->Add("pass");
	pasz->Add("past");
	pasz->Add("patient");
	pasz->Add("pattern");
	pasz->Add("pay");
	pasz->Add("peace");
	pasz->Add("people");
	pasz->Add("per");
	pasz->Add("perform");
	pasz->Add("performance");
	pasz->Add("perhaps");
	pasz->Add("period");
	pasz->Add("person");
	pasz->Add("personal");
	pasz->Add("phone");
	pasz->Add("physical");
	pasz->Add("pick");
	pasz->Add("picture");
	pasz->Add("piece");
	pasz->Add("place");
	pasz->Add("plan");
	pasz->Add("plant");
	pasz->Add("play");
	pasz->Add("player");
	pasz->Add("PM");
	pasz->Add("point");
	pasz->Add("police");
	pasz->Add("policy");
	pasz->Add("political");
	pasz->Add("politics");
	pasz->Add("poor");
	pasz->Add("popular");
	pasz->Add("population");
	pasz->Add("position");
	pasz->Add("positive");
	pasz->Add("possible");
	pasz->Add("power");
	pasz->Add("practice");
	pasz->Add("prepare");
	pasz->Add("present");
	pasz->Add("president");
	pasz->Add("pressure");
	pasz->Add("pretty");
	pasz->Add("prevent");
	pasz->Add("price");
	pasz->Add("private");
	pasz->Add("probably");
	pasz->Add("problem");
	pasz->Add("process");
	pasz->Add("produce");
	pasz->Add("product");
	pasz->Add("production");
	pasz->Add("professional");
	pasz->Add("professor");
	pasz->Add("program");
	pasz->Add("project");
	pasz->Add("property");
	pasz->Add("protect");
	pasz->Add("prove");
	pasz->Add("provide");
	pasz->Add("public");
	pasz->Add("pull");
	pasz->Add("purpose");
	pasz->Add("push");
	pasz->Add("put");
	pasz->Add("quality");
	pasz->Add("question");
	pasz->Add("quickly");
	pasz->Add("quite");
	pasz->Add("race");
	pasz->Add("radio");
	pasz->Add("raise");
	pasz->Add("range");
	pasz->Add("rate");
	pasz->Add("rather");
	pasz->Add("reach");
	pasz->Add("read");
	pasz->Add("ready");
	pasz->Add("real");
	pasz->Add("reality");
	pasz->Add("realize");
	pasz->Add("really");
	pasz->Add("reason");
	pasz->Add("receive");
	pasz->Add("recent");
	pasz->Add("recently");
	pasz->Add("recognize");
	pasz->Add("record");
	pasz->Add("red");
	pasz->Add("reduce");
	pasz->Add("reflect");
	pasz->Add("region");
	pasz->Add("relate");
	pasz->Add("relationship");
	pasz->Add("religious");
	pasz->Add("remain");
	pasz->Add("remember");
	pasz->Add("remove");
	pasz->Add("report");
	pasz->Add("represent");
	pasz->Add("Republican");
	pasz->Add("require");
	pasz->Add("research");
	pasz->Add("resource");
	pasz->Add("respond");
	pasz->Add("response");
	pasz->Add("responsibility");
	pasz->Add("rest");
	pasz->Add("result");
	pasz->Add("return");
	pasz->Add("reveal");
	pasz->Add("rich");
	pasz->Add("right");
	pasz->Add("rise");
	pasz->Add("risk");
	pasz->Add("road");
	pasz->Add("rock");
	pasz->Add("role");
	pasz->Add("room");
	pasz->Add("rule");
	pasz->Add("run");
	pasz->Add("safe");
	pasz->Add("same");
	pasz->Add("save");
	pasz->Add("say");
	pasz->Add("scene");
	pasz->Add("school");
	pasz->Add("science");
	pasz->Add("scientist");
	pasz->Add("score");
	pasz->Add("sea");
	pasz->Add("season");
	pasz->Add("seat");
	pasz->Add("second");
	pasz->Add("section");
	pasz->Add("security");
	pasz->Add("see");
	pasz->Add("seek");
	pasz->Add("seem");
	pasz->Add("sell");
	pasz->Add("send");
	pasz->Add("senior");
	pasz->Add("sense");
	pasz->Add("series");
	pasz->Add("serious");
	pasz->Add("serve");
	pasz->Add("service");
	pasz->Add("set");
	pasz->Add("seven");
	pasz->Add("several");
	pasz->Add("sex");
	pasz->Add("sexual");
	pasz->Add("shake");
	pasz->Add("share");
	pasz->Add("she");
	pasz->Add("shoot");
	pasz->Add("short");
	pasz->Add("shot");
	pasz->Add("should");
	pasz->Add("shoulder");
	pasz->Add("show");
	pasz->Add("side");
	pasz->Add("sign");
	pasz->Add("significant");
	pasz->Add("similar");
	pasz->Add("simple");
	pasz->Add("simply");
	pasz->Add("since");
	pasz->Add("sing");
	pasz->Add("single");
	pasz->Add("sister");
	pasz->Add("sit");
	pasz->Add("site");
	pasz->Add("situation");
	pasz->Add("six");
	pasz->Add("size");
	pasz->Add("skill");
	pasz->Add("skin");
	pasz->Add("small");
	pasz->Add("smile");
	pasz->Add("so");
	pasz->Add("social");
	pasz->Add("society");
	pasz->Add("soldier");
	pasz->Add("some");
	pasz->Add("somebody");
	pasz->Add("someone");
	pasz->Add("something");
	pasz->Add("sometimes");
	pasz->Add("son");
	pasz->Add("song");
	pasz->Add("soon");
	pasz->Add("sort");
	pasz->Add("sound");
	pasz->Add("source");
	pasz->Add("south");
	pasz->Add("southern");
	pasz->Add("space");
	pasz->Add("speak");
	pasz->Add("special");
	pasz->Add("specific");
	pasz->Add("speech");
	pasz->Add("spend");
	pasz->Add("sport");
	pasz->Add("spring");
	pasz->Add("staff");
	pasz->Add("stage");
	pasz->Add("stand");
	pasz->Add("standard");
	pasz->Add("star");
	pasz->Add("start");
	pasz->Add("state");
	pasz->Add("statement");
	pasz->Add("station");
	pasz->Add("stay");
	pasz->Add("step");
	pasz->Add("still");
	pasz->Add("stock");
	pasz->Add("stop");
	pasz->Add("store");
	pasz->Add("story");
	pasz->Add("strategy");
	pasz->Add("street");
	pasz->Add("strong");
	pasz->Add("structure");
	pasz->Add("student");
	pasz->Add("study");
	pasz->Add("stuff");
	pasz->Add("style");
	pasz->Add("subject");
	pasz->Add("success");
	pasz->Add("successful");
	pasz->Add("such");
	pasz->Add("suddenly");
	pasz->Add("suffer");
	pasz->Add("suggest");
	pasz->Add("summer");
	pasz->Add("support");
	pasz->Add("sure");
	pasz->Add("surface");
	pasz->Add("system");
	pasz->Add("table");
	pasz->Add("take");
	pasz->Add("talk");
	pasz->Add("task");
	pasz->Add("tax");
	pasz->Add("teach");
	pasz->Add("teacher");
	pasz->Add("team");
	pasz->Add("technology");
	pasz->Add("television");
	pasz->Add("tell");
	pasz->Add("ten");
	pasz->Add("tend");
	pasz->Add("term");
	pasz->Add("test");
	pasz->Add("than");
	pasz->Add("thank");
	pasz->Add("that");
	pasz->Add("the");
	pasz->Add("their");
	pasz->Add("them");
	pasz->Add("themselves");
	pasz->Add("then");
	pasz->Add("theory");
	pasz->Add("there");
	pasz->Add("these");
	pasz->Add("they");
	pasz->Add("thing");
	pasz->Add("think");
	pasz->Add("third");
	pasz->Add("this");
	pasz->Add("those");
	pasz->Add("though");
	pasz->Add("thought");
	pasz->Add("thousand");
	pasz->Add("threat");
	pasz->Add("three");
	pasz->Add("through");
	pasz->Add("throughout");
	pasz->Add("throw");
	pasz->Add("thus");
	pasz->Add("time");
	pasz->Add("to");
	pasz->Add("today");
	pasz->Add("together");
	pasz->Add("tonight");
	pasz->Add("too");
	pasz->Add("top");
	pasz->Add("total");
	pasz->Add("tough");
	pasz->Add("toward");
	pasz->Add("town");
	pasz->Add("trade");
	pasz->Add("traditional");
	pasz->Add("training");
	pasz->Add("travel");
	pasz->Add("treat");
	pasz->Add("treatment");
	pasz->Add("tree");
	pasz->Add("trial");
	pasz->Add("trip");
	pasz->Add("trouble");
	pasz->Add("true");
	pasz->Add("truth");
	pasz->Add("try");
	pasz->Add("turn");
	pasz->Add("TV");
	pasz->Add("two");
	pasz->Add("type");
	pasz->Add("under");
	pasz->Add("understand");
	pasz->Add("unit");
	pasz->Add("until");
	pasz->Add("up");
	pasz->Add("upon");
	pasz->Add("us");
	pasz->Add("use");
	pasz->Add("usually");
	pasz->Add("value");
	pasz->Add("various");
	pasz->Add("very");
	pasz->Add("victim");
	pasz->Add("view");
	pasz->Add("violence");
	pasz->Add("visit");
	pasz->Add("voice");
	pasz->Add("vote");
	pasz->Add("wait");
	pasz->Add("walk");
	pasz->Add("wall");
	pasz->Add("want");
	pasz->Add("war");
	pasz->Add("watch");
	pasz->Add("water");
	pasz->Add("way");
	pasz->Add("we");
	pasz->Add("weapon");
	pasz->Add("wear");
	pasz->Add("week");
	pasz->Add("weight");
	pasz->Add("well");
	pasz->Add("west");
	pasz->Add("western");
	pasz->Add("what");
	pasz->Add("whatever");
	pasz->Add("when");
	pasz->Add("where");
	pasz->Add("whether");
	pasz->Add("which");
	pasz->Add("while");
	pasz->Add("white");
	pasz->Add("who");
	pasz->Add("whole");
	pasz->Add("whom");
	pasz->Add("whose");
	pasz->Add("why");
	pasz->Add("wide");
	pasz->Add("wife");
	pasz->Add("will");
	pasz->Add("win");
	pasz->Add("wind");
	pasz->Add("window");
	pasz->Add("wish");
	pasz->Add("with");
	pasz->Add("within");
	pasz->Add("without");
	pasz->Add("woman");
	pasz->Add("wonder");
	pasz->Add("word");
	pasz->Add("work");
	pasz->Add("worker");
	pasz->Add("world");
	pasz->Add("worry");
	pasz->Add("would");
	pasz->Add("write");
	pasz->Add("writer");
	pasz->Add("wrong");
	pasz->Add("yard");
	pasz->Add("yeah");
	pasz->Add("year");
	pasz->Add("yes");
	pasz->Add("yet");
	pasz->Add("you");
	pasz->Add("young");
	pasz->Add("your");
	pasz->Add("yourself");

	for (i = 0; i < pasz->NumElements(); i++)
	{
		sz = pasz->Get(i)->Text();
		ToLower(sz);
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void PrintRandomWords(CChars* psz, CRandom* pcRandom, bool bIncludeArchaic, int iWordCount)
{
	int		iMaxWords;
	int		i;
	int		iWordNum;
	int		iCommonWords;
	bool	bFirst;

	iCommonWords = gaszCommonWords.NumElements();
	iMaxWords = iCommonWords;
	if (bIncludeArchaic)
	{
		iMaxWords += gaszArchaicWords.NumElements();
	}

	bFirst = true;
	for (i = 0; i < iWordCount; i++)
	{
		if (!bFirst)
		{
			psz->Append(" ");
		}
		else
		{
			bFirst = false;
		}

		iWordNum = pcRandom->Next(0, iMaxWords - 1);
		if (iWordNum > gaszCommonWords.NumElements())
		{
			psz->Append(gaszArchaicWords.Get(iWordNum - iCommonWords));
		}
		else
		{
			psz->Append(gaszCommonWords.Get(iWordNum));
		}
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void WordsInit(void)
{
	gaszArchaicWords.Init();
	gaszArchaicDefinitions.Init();
	gaszCommonWords.Init();

	GetArchaicDefinitions(&gaszArchaicDefinitions);
	GetArchaicWords(&gaszArchaicWords);
	GetCommonWords(&gaszCommonWords);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void WordsKill(void)
{
	gaszArchaicWords.Kill();
	gaszArchaicDefinitions.Kill();
	gaszCommonWords.Kill();
}

