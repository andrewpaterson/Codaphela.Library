#include "TraceValue.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void STraceValue::Init(void)
{
	eValue = TV_Undriven;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void STraceValue::Init(ETraceValue eTraceValue)
{
	eValue = eTraceValue;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void STraceValue::Init(bool bValue)
{
	if (bValue)
	{
		eValue = TV_High;
	}
	else
	{
		eValue = TV_Low;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool STraceValue::IsHigh(void)
{
	return eValue == TV_High;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool STraceValue::IsLow(void)
{
	return eValue == TV_Low;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void STraceValue::Invert(void)
{
	bool	bLow;
	bool	bHigh;

	bLow = IsLow();
	bHigh = IsHigh();
	if (bLow || bHigh)
	{
		Init(!bHigh);
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void STraceValue::Print(CChars* psz)
{
	if (eValue == TV_Low)
	{
		psz->Append('0');
	}
	else if (eValue == TV_High)
	{
		psz->Append('1');
	}
	else if (eValue == TV_Undriven)
	{
		psz->Append('-');
	}
	else if (eValue == TV_Unsettled)
	{
		psz->Append('X');
	}
}

