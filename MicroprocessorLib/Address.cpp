                                 #include "IntUtil.h"
#include "Address.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool AreOffsetsOnDifferentPages(int iOffsetFirst, int iOffsetSecond)
{
    int pageOfFirst = iOffsetFirst / PAGE_SIZE_BYTES;
    int pageOfSecond = iOffsetSecond / PAGE_SIZE_BYTES;
    return pageOfFirst != pageOfSecond;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::Init(CAddress* pcAddress)
{
    Init(pcAddress->GetBank(), pcAddress->GetOffset());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::Init(void)
{
    Init(0x00, 0x0000);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::Init(int iBank, int iOffset)
{
    if (iBank > 0xFF)
    {
        gcLogger.Error("Call ToByte(iBank) before creating an Address.");
    }
    if (iOffset > 0xFFFF)
    {
        gcLogger.Error("Call ToShort(iOffset) before creating an Address.");
    }

    miBank = ToByte(iBank);
    miOffset = ToShort(iOffset);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CAddress::GetBank()
{
    return miBank;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CAddress::GetOffset()
{
    return miOffset;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CAddress* CAddress::Offset(int iOffset, bool bWrapOffset)
{
    if (iOffset != 0)
    {
        if (bWrapOffset)
        {
            miOffset = ToShort(miOffset + iOffset);
        }
        else
        {
            int newOffset = miOffset + iOffset;
            if (newOffset >= BANK_SIZE_BYTES)
            {
                miBank = ToByte(miBank + 1);
                miOffset = ToShort((newOffset - BANK_SIZE_BYTES));  //This subtraction is probably unnecessary.
            }
            else
            {
                miOffset = ToShort(miOffset + iOffset);
            }
        }
    }
    return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::Print(CChars* psz)
{
    psz->Append(HexByteToString((uint8)miBank));
    psz->Append(":");
    psz->Append(HexShortToString((uint16)miOffset));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::SetOffset(int iOffset)
{
    miOffset = iOffset;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::SetBank(int iBank)
{
    miBank = iBank;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::SetOffsetLow(int iOffsetLow)
{
    miOffset = SetLowByte(miOffset, iOffsetLow);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CAddress::SetOffsetHigh(int iOffsetHigh)
{
    miOffset = SetHighByte(miOffset, iOffsetHigh);
}


