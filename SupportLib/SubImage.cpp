/** ---------------- COPYRIGHT NOTICE, DISCLAIMER, and LICENSE ------------- **

Copyright (c) 2009 Andrew Paterson

This file is part of The Codaphela Project: Codaphela SupportLib

Codaphela SupportLib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Codaphela SupportLib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Codaphela SupportLib.  If not, see <http://www.gnu.org/licenses/>.

libpng is Copyright Glenn Randers-Pehrson
zlib is Copyright Jean-loup Gailly and Mark Adler

** ------------------------------------------------------------------------ **/
#include "SubImage.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::Init(void)
{
	mcImageRect.Init();
	msOffsetTopLeft.Zero();
	msOffsetBottomRight.Zero();
	msAlignment.Zero();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::Init(int iLeft, int iTop, int iRight, int iBottom, int iLeftOffset, int iTopOffset, int iRightOffset, int iBottomOffset, int iAlignment)
{
	mcImageRect.Init(iLeft, iTop, iRight, iBottom);
	msOffsetTopLeft.Init(iLeftOffset, iTopOffset);
	msOffsetBottomRight.Init(iRightOffset, iBottomOffset);
	SetAlignment(iAlignment);
}



//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::Kill()
{
	mcImageRect.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::SetAlignment(int iAlignment)
{
	SetHorizontalAlignment(iAlignment);
	SetVerticalAlignment(iAlignment);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::SetHorizontalAlignment(int iAlignment)
{
	if (iAlignment & SUB_IMAGE_ALIGNMENT_LEFT)
	{
		msAlignment.x = 0;
	}
	else if (iAlignment & SUB_IMAGE_ALIGNMENT_CENTER_HORIZONTAL)
	{
		msAlignment.x = -GetFullWidth()/2;
	}
	else if (iAlignment & SUB_IMAGE_ALIGNMENT_RIGHT)
	{
		msAlignment.x = -GetFullWidth();
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::SetVerticalAlignment(int iAlignment)
{
	if (iAlignment & SUB_IMAGE_ALIGNMENT_TOP)
	{
		msAlignment.y = 0;
	}
	else if (iAlignment & SUB_IMAGE_ALIGNMENT_CENTER_VERTICAL)
	{
		msAlignment.y = -GetFullHeight()/2;
	}
	else if (iAlignment & SUB_IMAGE_ALIGNMENT_BOTTOM)
	{
		msAlignment.y = -GetFullHeight();
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullWidth(void)
{
	return msOffsetTopLeft.x + GetImageWidth() + msOffsetBottomRight.x;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullHeight(void)
{
	return msOffsetTopLeft.y + GetImageHeight() + msOffsetBottomRight.y;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageWidth(void)
{
	return mcImageRect.GetWidth();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageHeight(void)
{
	return mcImageRect.GetHeight();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
SInt2 CSubImage::GetFullSize(void)
{
	SInt2	sSize;

	sSize.Init(GetFullWidth(), GetFullHeight());
	return sSize;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
SInt2 CSubImage::GetImageSize(void)
{
	SInt2	sSize;

	sSize.Init(GetImageWidth(), GetImageHeight());
	return sSize;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageLeft(void)
{
	return msAlignment.x + msOffsetTopLeft.x;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageTop(void)
{
	return msAlignment.y + msOffsetTopLeft.y;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageRight(void)
{
	return msAlignment.x + msOffsetTopLeft.x + GetImageWidth();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetImageBottom(void)
{
	return msAlignment.y + msOffsetTopLeft.y + GetImageHeight();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullLeft(void)
{
	return msAlignment.x;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullTop(void)
{
	return msAlignment.y;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullRight(void)
{
	return msAlignment.x + GetFullWidth();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CSubImage::GetFullBottom(void)
{
	return msAlignment.y + GetFullHeight();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CSubImage::IsImageEmpty(void)
{
	if (GetImageWidth() != 0)
	{
		return FALSE;
	}
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::GetFullDestBounds(int x, int y, CRectangle* pcReturn)
{
	pcReturn->miLeft = x + GetFullLeft();
	pcReturn->miTop = y + GetFullTop();
	pcReturn->miRight = x + GetFullRight();
	pcReturn->miBottom = y + GetFullBottom();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
SInt2 CSubImage::GetImageDestPos(int x, int y)
{
	SInt2	iPos;

	iPos.Init(x + GetImageLeft(), y + GetImageTop());
	return iPos;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::GetFullSourceBounds(CRectangle* pcReturn)
{
	pcReturn->miLeft = mcImageRect.miLeft - msOffsetTopLeft.x;
	pcReturn->miTop = mcImageRect.miTop - msOffsetTopLeft.y;
	pcReturn->miRight = mcImageRect.miRight + msOffsetBottomRight.x;
	pcReturn->miBottom = mcImageRect.miBottom + msOffsetBottomRight.y;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::GetImageSourceBounds(CRectangle* pcReturn)
{
	pcReturn->Copy(&mcImageRect);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::GetImageDestBounds(int x, int y, CRectangle* pcReturn)
{
	pcReturn->miLeft = x + GetImageLeft();
	pcReturn->miTop = y + GetImageTop();
	pcReturn->miRight = x + GetImageRight();
	pcReturn->miBottom = y + GetImageBottom();
}



//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::AdjustImageRect(CSubImage* pcSubImage)
{
	//This assumes the Full dimensions of the incoming sub image are the same as the Image dimensions.
	
	msOffsetTopLeft += pcSubImage->msOffsetTopLeft;
	msOffsetBottomRight += pcSubImage->msOffsetBottomRight;
	mcImageRect = pcSubImage->mcImageRect;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::AdjustImageRect(int iLeft, int iTop, int iRight, int iBottom)
{
	//This assumes the Subimage is already correctly initialised.

	int iDiff;

	iDiff = iLeft - mcImageRect.miLeft;
	mcImageRect.miLeft = iLeft;
	msOffsetTopLeft.x += iDiff;

	iDiff = mcImageRect.miRight - iRight;
	mcImageRect.miRight = iRight;
	msOffsetBottomRight.x += iDiff;

	iDiff = iTop - mcImageRect.miTop;
	mcImageRect.miTop = iTop;
	msOffsetTopLeft.y += iDiff;

	iDiff = mcImageRect.miBottom - iBottom;
	mcImageRect.miBottom = iBottom;
	msOffsetBottomRight.y += iDiff;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::AdjustToEmpty(void)
{
	int	iWidth;
	int iHeight;
	int	iXAlign;
	int	iYAlign;

	iWidth = GetFullWidth();
	iHeight = GetFullHeight();
	iXAlign = msAlignment.x;
	iYAlign = msAlignment.y;

	Init(0, 0, 0, 0, 0, 0, iWidth, iHeight);

	msAlignment.x = iXAlign;
	msAlignment.y = iYAlign;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CSubImage::Copy(CSubImage* pcSubImage)
{
	mcImageRect.Copy(&pcSubImage->mcImageRect);
	msOffsetTopLeft = pcSubImage->msOffsetTopLeft;
	msOffsetBottomRight = pcSubImage->msOffsetBottomRight;
	msAlignment = pcSubImage->msAlignment;
}

