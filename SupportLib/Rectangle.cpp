/** ---------------- COPYRIGHT NOTICE, DISCLAIMER, and LICENSE ------------- **

Copyright (c) 2009 Andrew Paterson

This file is part of The Codaphela Project: Codaphela SupportLib

Codaphela SupportLib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Codaphela SupportLib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Codaphela SupportLib.  If not, see <http://www.gnu.org/licenses/>.

libpng is Copyright Glenn Randers-Pehrson
zlib is Copyright Jean-loup Gailly and Mark Adler

** ------------------------------------------------------------------------ **/
#include "Rectangle.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Init(void)
{
	miLeft = 0;
	miRight = 0;
	miTop = 0;
	miBottom = 0;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Init(int x1, int y1, int x2, int y2)
{
	miLeft = x1;
	miTop = y1;
	miRight = x2;
	miBottom = y2;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Init(SInt2 sTopLeft, SInt2 sBottomRight)
{
	miLeft = sTopLeft.x;
	miTop = sTopLeft.y;
	miRight = sBottomRight.x;
	miBottom = sBottomRight.y;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Init(CRectangle* pcSource)
{
	Copy(pcSource);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Kill(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::Copy(CRectangle* pcSource)
{
	miLeft = pcSource->miLeft;
	miTop = pcSource->miTop;
	miRight = pcSource->miRight;
	miBottom = pcSource->miBottom;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetWidth(void)
{
	return miRight - miLeft;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetHeight(void)
{
	return miBottom - miTop;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetArea(void)
{
	return GetWidth() * GetHeight();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::SetWidth(int iWidth)
{
	miRight = miLeft + iWidth;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::SetHeight(int iHeight)
{
	miBottom = miTop + iHeight;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::SetSize(int iWidth, int iHeight)
{
	SetWidth(iWidth);
	SetHeight(iHeight);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::SetPos(int x, int y)
{
	int	iWidth;
	int	iHeight;
	
	iWidth = GetWidth();
	iHeight = GetHeight();
	miLeft = x;
	miTop = y;
	miRight = miLeft + iWidth;
	miBottom = miTop + iHeight;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetLeft(void)
{
	return miLeft;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetTop(void)
{
	return miTop;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetRight(void)
{
	return miRight;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CRectangle::GetBottom(void)
{
	return miBottom;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CRectangle::GrowToContain(int iXPos, int iYPos)
{
	if (iXPos < miLeft)
	{
		miLeft = iXPos;
	}
	if (iYPos < miTop)
	{
		miTop = iYPos;
	}

	if (iXPos >= miRight)
	{
		miRight = iXPos+1;
	}
	if (iYPos >= miBottom)
	{
		miBottom = iYPos+1;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CRectangle::IsValid(void)
{
	return (miLeft <= miRight) && (miTop <= miBottom);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CRectangle::IsIn(int x, int y)
{
	return (((x >= miLeft) && (x <= miRight)) && ((y >= miTop) && (y <= miBottom)));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CRectangle::IsIn(int iLeft, int iTop, int iRight, int iBottom)
{
	return (IsIn(iLeft, iTop) && IsIn(iRight, iBottom));
}


#define HALF_TEXEL	(0.5f)


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
SFloat2	CRectangle::GetUVCoordinatesTopLeft(int iTextureXSize, int iTextureYSize)
{
	SFloat2	sTopLeft;

	sTopLeft.x = ((float)miLeft + HALF_TEXEL) / (float)iTextureXSize;
	sTopLeft.y = ((float)miTop + HALF_TEXEL) / (float)iTextureYSize;
	return sTopLeft;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
SFloat2	CRectangle::GetUVCoordinatesBottomRight(int iTextureXSize, int iTextureYSize)
{
	SFloat2 sBottomRight;

	sBottomRight.x = ((float)miRight + HALF_TEXEL) / (float)iTextureXSize;
	sBottomRight.y = ((float)miBottom + HALF_TEXEL) / (float)iTextureYSize;
	return sBottomRight;
}
