#include "GlobalMemoryAllocator.h"


CGeneralMemory			gcMemory;
CGlobalMemoryAllocator	gcMemoryAllocator;


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CGlobalMemoryAllocator::Kill(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CGlobalMemoryAllocator::Malloc(size_t tSize)
{
	return gcMemory.Add((uint32)tSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CGlobalMemoryAllocator::Realloc(void* pv, size_t tSize)
{
	void*	pvNew;

	pvNew = gcMemory.Grow(pv, (uint32)tSize);
	return pvNew;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGlobalMemoryAllocator::Free(void* pv)
{
	return gcMemory.Remove(pv);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGlobalMemoryAllocator::IsLocal(void)
{
	return false;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size_t CGlobalMemoryAllocator::SizeOffset(void)
{
	return sizeof(SGeneralMemoryAllocation);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
const char* CGlobalMemoryAllocator::ShortName(void)
{
	return "GMA";
}

