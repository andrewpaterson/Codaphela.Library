#include "FreeListAllocator.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CFreeListAllocator::Init(int iElementSize)
{
	mcFreeList.Init(iElementSize);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CFreeListAllocator::Init(int iElementSize, int iAlignment)
{
	mcFreeList.Init(iElementSize, iAlignment);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CFreeListAllocator::Init(int iElementSize, int iAlignment, int iOffset)
{
	mcFreeList.Init(iElementSize, iAlignment, iOffset);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CFreeListAllocator::Kill(void)
{
	mcFreeList.Kill();
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void* CFreeListAllocator::Malloc(size uiSize)
{
	if (uiSize > (size)mcFreeList.GetElementSize())
	{
		return NULL;
	}
	
	return mcFreeList.Add();
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFreeListAllocator::Free(void* pv)
{
	return mcFreeList.Remove(pv);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void* CFreeListAllocator::Realloc(void* pv, size uiSize)
{
	if (uiSize > (size)mcFreeList.GetElementSize())
	{
		mcFreeList.Remove(pv);
		return NULL;
	}

	return pv;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
const char* CFreeListAllocator::GetName(void)
{
	return "CFreeListAllocator";
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
CFreeList* CFreeListAllocator::GetFreeList(void)
{
	return &mcFreeList;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFreeListAllocator::Read(CFileReader* pcFileReader)
{
	//Do not call .Init() before Read().

	SFreeListParams	sParams;

	if (!pcFileReader->ReadData(&sParams, sizeof(SFreeListParams)))
	{
		return false;
	}

	mcFreeList.Init(sParams.iElementSize, sParams.iAlignment, sParams.iOffset);
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFreeListAllocator::Write(CFileWriter* pcFileWriter)
{
	SFreeListParams	sParams;

	mcFreeList.GetParams(&sParams);
	
	if (!pcFileWriter->WriteData(&sParams, sizeof(SFreeListParams)))
	{
		return false;
	}
	return true;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CFreeListAllocator::SizeOffset(void)
{
	return 0;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CLifeInit<CMallocator> CFreeListAllocator::Create(int iElementSize)
{
	return LifeAlloc<CFreeListAllocator, CMallocator>(iElementSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CLifeInit<CMallocator> CFreeListAllocator::Create(int iElementSize, int iAlignment)
{
	return LifeAlloc<CFreeListAllocator, CMallocator>(iElementSize, iAlignment);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CLifeInit<CMallocator> CFreeListAllocator::Create(int iElementSize, int iAlignment, int iOffset)
{
	return LifeAlloc<CFreeListAllocator, CMallocator>(iElementSize, iAlignment, iOffset);
}


