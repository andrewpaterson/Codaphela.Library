#include "IndexedDataEvictedList.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CIndexedDataEvictedList::Init(void)
{
	mcKeys.Init();
	mcDatas.Init();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CIndexedDataEvictedList::Kill(void)
{
	mcDatas.Kill();
	mcKeys.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CIndexedDataEvictedList::IndexEvicted(OIndex oi, void* pvData, size iDataSize)
{
	mcKeys.Add(oi);
	mcDatas.Add(pvData, iDataSize);
	return true;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CIndexedDataEvictedList::NumElements(void)
{
	return mcKeys.NumElements();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
OIndex CIndexedDataEvictedList::GetKey(size iIndex)
{
	return mcKeys.GetValue(iIndex);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CIndexedDataEvictedList::GetData(size iIndex, size* piDataSize)
{
	if (piDataSize)
	{
		*piDataSize = mcDatas.GetSize(iIndex);
	}
	return mcDatas.Get(iIndex);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CIndexedDataEvictedList::Clear(void)
{
	mcKeys.ReInit();
	mcDatas.ReInit();
}

