#include "IndexTreeHelper.h"
#include "Codabase.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CCodabase::Init(char* szDirectory, CLifeInit<CIndexedDataConfig> cIndexConfig, CLifeInit<CNamedIndexesConfig> cNamedConfig)
{
	CIndexTreeHelper	cHelper;

	cHelper.Init(szDirectory, "Primary", "Backup", false);

	mcFileController.Init(cHelper.GetPrimaryDirectory(), cHelper.GetBackupDirectory());
	mcFileController.Begin();
	mcNamedIndexedData.Init(&mcFileController, cIndexConfig, cNamedConfig);
	mcFileController.End();

	cHelper.Kill(false);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CCodabase::Kill(void)
{
	mcNamedIndexedData.Kill();
	mcFileController.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Open(void)
{
	return mcFileController.Begin();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Close(void)
{
	bool	bResult;

	if (!mcNamedIndexedData.IsWriteThrough())
	{
		bResult = Flush(false);
	}
	else
	{
		bResult = true;
	}
	bResult |= mcFileController.End();
	return bResult;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::ValidateConfigInitialised(void)
{
	return mcNamedIndexedData.ValidateConfigInitialised();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::ValidateConfigKilled(void)
{
	return mcNamedIndexedData.ValidateConfigKilled();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::ValidateIdentifiers(void)
{
	return mcNamedIndexedData.ValidateIdentifiers();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Add(OIndex oi, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Add(oi, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Add(OIndex oi, char* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Add(oi, szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Add(OIndex oi, CChars* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Add(oi, szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(OIndex oi, void* pvData)
{
	return mcNamedIndexedData.Set(oi, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(OIndex oi, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Set(oi, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(char* szName, void* pvData)
{
	return mcNamedIndexedData.Set(szName, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(char* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Set(szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(CChars* szName, void* pvData)
{
	return mcNamedIndexedData.Set(szName, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Set(CChars* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Set(szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Put(OIndex oi, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Put(oi, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Put(OIndex oi, char* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Put(oi, szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Put(OIndex oi, CChars* szName, void* pvData, uint32 uiDataSize)
{
	return mcNamedIndexedData.Put(oi, szName, pvData, uiDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(OIndex oi, void* pvData)
{
	return mcNamedIndexedData.Get(oi, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(OIndex oi, uint32* puiDataSize, void* pvData, uint32 uiMaxDataSize)
{
	return mcNamedIndexedData.Get(oi, puiDataSize, pvData, uiMaxDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(char* szName, void* pvData)
{
	return mcNamedIndexedData.Get(szName, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(char* szName, uint32* puiDataSize, void* pvData, uint32 uiMaxDataSize)
{
	return mcNamedIndexedData.Get(szName, puiDataSize, pvData, uiMaxDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(CChars* szName, void* pvData)
{
	return mcNamedIndexedData.Get(szName, pvData);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Get(CChars* szName, uint32* puiDataSize, void* pvData, uint32 uiMaxDataSize)
{
	return mcNamedIndexedData.Get(szName, puiDataSize, pvData, uiMaxDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::GetName(OIndex oi, CChars* szName)
{
	return mcNamedIndexedData.GetName(oi, szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::GetName(OIndex oi, char* szName, uint32* puiNameLength, uint32 uiMaxNameLength)
{
	return mcNamedIndexedData.GetName(oi, szName, puiNameLength, uiMaxNameLength);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
OIndex CCodabase::GetIndex(char* szName)
{
	return mcNamedIndexedData.GetIndex(szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
OIndex CCodabase::GetIndex(CChars* szName)
{
	return mcNamedIndexedData.GetIndex(szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Contains(OIndex oi)
{
	return mcNamedIndexedData.Contains(oi);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Contains(char* szName)
{
	return mcNamedIndexedData.Contains(szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Contains(CChars* szName)
{
	return mcNamedIndexedData.Contains(szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Remove(OIndex oi)
{
	return mcNamedIndexedData.Remove(oi);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Remove(char* szName)
{
	return mcNamedIndexedData.Remove(szName);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Remove(CChars* szName)
{
	return mcNamedIndexedData.Remove(szName);
}



//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Flush(void)
{
	return Flush(false);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::Flush(bool bClearCache)
{
	return mcNamedIndexedData.Flush(bClearCache);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumIndices(void)
{
	return mcNamedIndexedData.NumIndices();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumIndicesCached(void)
{
	return mcNamedIndexedData.NumIndicesCached();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumIndicesCached(size_t iSize)
{
	return mcNamedIndexedData.NumIndicesCached(iSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumDataCached(void)
{
	return mcNamedIndexedData.NumDataCached();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumDataCached(size_t iSize)
{
	return mcNamedIndexedData.NumDataCached(iSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumNames(void)
{
	return mcNamedIndexedData.NumNames();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CCodabase::NumNamesCached(void)
{
	return mcNamedIndexedData.NumNamesCached();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CCodabase::Dump(void)
{
	mcNamedIndexedData.Dump();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
OIndex CCodabase::StartIndexIteration(SIndexTreeFileIterator* psIterator, void* pvData, size_t* piDataSize, size_t iMaxDataSize)
{
	return mcNamedIndexedData.StartIndexIteration(psIterator, pvData, piDataSize, iMaxDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
OIndex CCodabase::IndexIterate(SIndexTreeFileIterator* psIterator, void* pvData, size_t* piDataSize, size_t iMaxDataSize)
{
	return mcNamedIndexedData.IndexIterate(psIterator, pvData, piDataSize, iMaxDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::StartNameIteration(SIndexTreeFileIterator* psIterator, char* szKey, OIndex* poi)
{
	return mcNamedIndexedData.StartNameIteration(psIterator, szKey, poi);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CCodabase::NameIterate(SIndexTreeFileIterator* psIterator, char* szKey, OIndex* poi)
{
	return mcNamedIndexedData.NameIterate(psIterator, szKey, poi);
}

