#include "BaseLib/Logger.h"
#include "BaseLib/LogString.h"
#include "FileIndex.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFilePosIndex::Init(void)
{
	miFile = -1;
	mulliFilePos = -1LL;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFilePosIndex::Init(int iFile, filePos ulliFilePos)
{
	miFile = iFile;
	mulliFilePos = ulliFilePos;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFilePosIndex::Kill(void)
{
	miFile = -1;
	mulliFilePos = 0;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CFilePosIndex::HasFile(void)
{
	return miFile != -1;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFilePosIndex::SetIndex(int iFile, filePos ulliFilePos)
{
	miFile = iFile;
	mulliFilePos = ulliFilePos;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CFileDataIndex CFilePosIndex::ToFileDataIndex(unsigned int muiDataSize)
{
	filePos			iIndex;
	filePos			iRemainder;
	CFileDataIndex	cFileDataIndex;
	
	if (HasFile())
	{
		iIndex = mulliFilePos / muiDataSize;
		iRemainder = mulliFilePos % muiDataSize;
		if (iRemainder == 0)
		{
			cFileDataIndex.Init(miFile, (unsigned int)iIndex);
			return cFileDataIndex;
		}
		else
		{
			gcLogger.Error2(__METHOD__, " Cannot convert a FilePosIndex [", IntToString(miFile), ", ", LongLongToString(mulliFilePos), "] to a FileDataIndex.  It is not a multiple of Data Size [", IntToString(muiDataSize), "].", NULL);
			cFileDataIndex.Init();
			return cFileDataIndex;
		}
	}
	else
	{
		cFileDataIndex.Init();
		return cFileDataIndex;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFileDataIndex::Init(void)
{
	miFile = -1;
	muiIndex = -1LL;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFileDataIndex::Init(int iFile, unsigned int uiIndex)
{
	miFile = iFile;
	muiIndex = uiIndex;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFileDataIndex::Kill(void)
{
	miFile = -1;
	muiIndex = 0;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CFileDataIndex::HasFile(void)
{
	return miFile != -1;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFileDataIndex::SetIndex(int iFile, unsigned int uiIndex)
{
	miFile = iFile;
	muiIndex = uiIndex;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CFileDataIndex::SetIndex(CFileDataIndex* pcSource)
{
	miFile = pcSource->miFile;
	muiIndex = pcSource->muiIndex;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CFileDataIndex::Equals(CFileDataIndex* pcOther)
{
	return pcOther->miFile == miFile && pcOther->muiIndex == muiIndex;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CFilePosIndex CFileDataIndex::ToFilePosIndex(unsigned int muiDataSize)
{
	CFilePosIndex	cPosIndex;

	if (HasFile())
	{
		cPosIndex.Init(miFile, ((filePos)muiIndex) * muiDataSize);
		return cPosIndex;
	}
	else
	{
		cPosIndex.Init();
		return cPosIndex;
	}
}

