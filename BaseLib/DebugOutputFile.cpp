#include "DebugOutput.h"
#include "DebugOutputFile.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CDebugOutputFile::Init(void)
{
	miPos = 0;
	mbOpen = false;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CDebugOutputFile::Kill(void)
{
	miPos = 0;
	mbOpen = false;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Open(EFileMode eFileMode)
{
	mbOpen = true;
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Close(void)
{
	mbOpen = false;
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
size CDebugOutputFile::Read(void* pvBuffer, size iSize, size iCount)
{
	return 0;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Seek(filePos iOffset, EFileSeekOrigin iSeekOrigin)
{
	if (iSeekOrigin == EFSO_END)
	{
		if (iOffset == 0)
		{
			return true;
		}
	}
	return false;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
size CDebugOutputFile::Write(const void* pvBuffer, size iSize, size iCount)
{
	//Fix this up to ensure that the zero-terminated buffer is the same as size * count.
	EngineOutput((char*)pvBuffer);

	miPos += iSize * iCount;
	return iSize * iCount;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
filePos CDebugOutputFile::Tell(void)
{
	return miPos;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::IsOpen(void)
{
	return mbOpen;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
filePos CDebugOutputFile::Size(void)
{
	return miPos;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Truncate(filePos iSize)
{
	return false;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Flush(void)
{
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CDebugOutputFile::Delete(void)
{
	return false;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
char* CDebugOutputFile::GetFilename(void)
{
	return "DebugOutput";
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
CDebugOutputFile* DebugOutputFile(void)
{
	CDebugOutputFile*	pcDebugOutputFile;

	pcDebugOutputFile = NewMalloc<CDebugOutputFile>();
	pcDebugOutputFile->Init();
	pcDebugOutputFile->mbBasicFileMustFree = true;
	return pcDebugOutputFile;
}

