#include "MapHelper.h"
#include "MapAccess.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CMapAccess::Init(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void** CMapAccess::PutLongPtr(int64 lliKey, void* pvPointer)
{
	return (void**)Put(&lliKey, sizeof(int64), &pvPointer, sizeof(void*));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16* CMapAccess::PutLongShort(int64 lliKey, int16 iData)
{
	return (int16*)Put(&lliKey, sizeof(int64), &iData, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32* CMapAccess::PutLongInt(int64 lliKey, int32 iData)
{
	return (int32*)Put(&lliKey, sizeof(int64), &iData, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64* CMapAccess::PutLongLong(int64 lliKey, int64 lliData)
{
	return (int64*)Put(&lliKey, sizeof(int64), &lliData, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutLongChar(int64 lliKey, char cData)
{
	return (char*)Put(&lliKey, sizeof(int64), &cData, sizeof(char));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutLongString(int64 lliKey, char* pszData)
{

	return (char*)Put(&lliKey, sizeof(int64), pszData, StrDataSize(pszData));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::PutLongData(int64 lliKey, void* pvData, size iDataSize)
{
	return Put(&lliKey, sizeof(int64), pvData, iDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void** CMapAccess::PutShortPtr(int16 iKey, void* pvPointer)
{
	return (void**)Put(&iKey, sizeof(int16), &pvPointer, sizeof(void*));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16* CMapAccess::PutShortShort(int16 iKey, int16 iData)
{
	return (int16*)Put(&iKey, sizeof(int16), &iData, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32* CMapAccess::PutShortInt(int16 iKey, int32 iData)
{
	return (int32*)Put(&iKey, sizeof(int16), &iData, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64* CMapAccess::PutShortLong(int16 iKey, int64 lliData)
{
	return (int64*)Put(&iKey, sizeof(int16), &lliData, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutShortChar(int16 iKey, char cData)
{
	return (char*)Put(&iKey, sizeof(int16), &cData, sizeof(char));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutShortString(int16 iKey, char* pszData)
{
	return (char*)Put(&iKey, sizeof(int16), pszData, StrDataSize(pszData));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::PutShortData(int16 iKey, void* pvData, size iDataSize)
{
	return (void*)Put(&iKey, sizeof(int16), pvData, iDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void** CMapAccess::PutIntPtr(int32 iKey, void* pvPointer)
{
	return (void**)Put(&iKey, sizeof(int32), &pvPointer, sizeof(void*));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16* CMapAccess::PutIntShort(int32 iKey, int16 iData)
{
	return (int16*)Put(&iKey, sizeof(int32), &iData, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32* CMapAccess::PutIntInt(int32 iKey, int32 iData)
{
	return (int32*)Put(&iKey, sizeof(int32), &iData, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64* CMapAccess::PutIntLong(int32 iKey, int64 lliData)
{
	return (int64*)Put(&iKey, sizeof(int32), &lliData, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutIntChar(int32 iKey, char cData)
{
	return (char*)Put(&iKey, sizeof(int32), &cData, sizeof(char));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutIntString(int32 iKey, char* pszData)
{
	return (char*)Put(&iKey, sizeof(int32), pszData, StrDataSize(pszData));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::PutIntData(int32 iKey, void* pvData, size iDataSize)
{
	return (void*)Put(&iKey, sizeof(int32), pvData, iDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void** CMapAccess::PutStringPtr(char* pszKey, void* pvPointer)
{
	return (void**)Put(pszKey, StrKeySize(pszKey), &pvPointer, sizeof(void*));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::PutStringData(char* pszKey, void* pvData, size iDataSize)
{
	return (void*)Put(pszKey, StrKeySize(pszKey), pvData, iDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutStringChar(char* pszKey, char cData)
{
	return (char*)Put(pszKey, StrKeySize(pszKey), &cData, sizeof(char));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16* CMapAccess::PutStringShort(char* pszKey, int16 iData)
{
	return (int16*)Put(pszKey, StrKeySize(pszKey), &iData, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32* CMapAccess::PutStringInt(char* pszKey, int32 iData)
{
	return (int32*)Put(pszKey, StrKeySize(pszKey), &iData, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64* CMapAccess::PutStringLong(char* pszKey, int64 lliData)
{
	return (int64*)Put(pszKey, StrKeySize(pszKey), &lliData, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutStringString(char* pszKey, char* pszData)
{
	return (char*)Put(pszKey, StrKeySize(pszKey), pszData, StrDataSize(pszData));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::PutKeyData(void* pvKey, size iKeySize, void* pvData, size iDataSize)
{
	return Put(pvKey, iKeySize, pvData, iDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32* CMapAccess::PutKeyInt(void* pvKey, size iKeySize, int32 iData)
{
	return (int32*)Put(pvKey, iKeySize, &iData, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::PutKeyString(void* pvKey, size iKeySize, char* pszData)
{
	return (char*)Put(pvKey, iKeySize, pszData, StrDataSize(pszData));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetString(void* pvKey, size iKeySize)
{
	return (char*)Get(pvKey, iKeySize, NULL);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetLongString(int64 lliKey)
{
	return GetString(&lliKey, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16 CMapAccess::GetLongShort(int64 lliKey, int16 iNullValue)
{
	int16*	pi;
	
	pi = (int16*)Get(&lliKey, sizeof(int64), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32 CMapAccess::GetLongInt(int64 lliKey, int32 iNullValue)
{
	int32*	pi;
	
	pi = (int32*)Get(&lliKey, sizeof(int64), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CMapAccess::GetLongLong(int64 lliKey, int64 lliNullValue)
{
	int64* plli;

	plli = (int64*)Get(&lliKey, sizeof(int64), NULL);
	if (plli)
	{
		return *plli;
	}
	else
	{
		return lliNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char CMapAccess::GetLongChar(int64 lliKey, char cNullValue)
{
	char* pc;

	pc = (char*)Get(&lliKey, sizeof(int64), NULL);
	if (pc)
	{
		return *pc;
	}
	else
	{
		return cNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetLongData(int64 lliKey, size* piDataSize)
{
	return Get(&lliKey, sizeof(int64), piDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetLongPtr(int64 lliKey)
{
	void*	pv;

	pv = Get(&lliKey, sizeof(int64), NULL);
	if (pv)
	{
		return pv;
	}
	else
	{
		return NULL;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetIntString(int32 iKey)
{
	return GetString(&iKey, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32 CMapAccess::GetIntInt(int32 iKey, int32 iNullValue)
{
	int32* pi;

	pi = (int32*)Get(&iKey, sizeof(int32), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16 CMapAccess::GetIntShort(int32 iKey, int16 iNullValue)
{
	int16* pi;

	pi = (int16*)Get(&iKey, sizeof(int16), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CMapAccess::GetIntLong(int32 iKey, int64 lliNullValue)
{
	int64* plli;

	plli = (int64*)Get(&iKey, sizeof(int32), NULL);
	if (plli)
	{
		return *plli;
	}
	else
	{
		return lliNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char CMapAccess::GetIntChar(int32 iKey, char cNullValue)
{
	char* pc;

	pc = (char*)Get(&iKey, sizeof(int32), NULL);
	if (pc)
	{
		return *pc;
	}
	else
	{
		return cNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetIntData(int32 iKey, size* piDataSize)
{
	return Get(&iKey, sizeof(int32), piDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetIntPtr(int32 iKey)
{
	void* pv;

	pv = Get(&iKey, sizeof(int32), NULL);
	if (pv)
	{
		return pv;
	}
	else
	{
		return NULL;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetShortString(int16 iKey)
{
	return GetString(&iKey, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32 CMapAccess::GetShortInt(int16 iKey, int32 iNullValue)
{
	int32* pi;

	pi = (int32*)Get(&iKey, sizeof(int16), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16 CMapAccess::GetShortShort(int16 iKey, int16 iNullValue)
{
	int16* pi;

	pi = (int16*)Get(&iKey, sizeof(int16), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CMapAccess::GetShortLong(int16 iKey, int64 lliNullValue)
{
	int64* plli;

	plli = (int64*)Get(&iKey, sizeof(int16), NULL);
	if (plli)
	{
		return *plli;
	}
	else
	{
		return lliNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char CMapAccess::GetShortChar(int16 iKey, char cNullValue)
{
	char* pc;

	pc = (char*)Get(&iKey, sizeof(int16), NULL);
	if (pc)
	{
		return *pc;
	}
	else
	{
		return cNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetShortData(int16 iKey, size* piDataSize)
{
	return Get(&iKey, sizeof(int16), piDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetShortPtr(int16 iKey)
{
	void* pv;

	pv = Get(&iKey, sizeof(int16), NULL);
	if (pv)
	{
		return pv;
	}
	else
	{
		return NULL;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetStringData(char* pszKey, size* piDataSize)
{
	return Get(pszKey, StrKeySize(pszKey), piDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetStringString(char* pszKey)
{
	return GetString(pszKey, StrKeySize(pszKey));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char CMapAccess::GetStringChar(char* pszKey, char cNullValue)
{
	char*	pc;

	pc = (char*)Get(pszKey, StrKeySize(pszKey), NULL);
	if (pc)
	{
		return *pc;
	}
	else
	{
		return cNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16 CMapAccess::GetStringShort(char* pszKey, int16 iNullValue)
{
	int16* pi;

	pi = (int16*)Get(pszKey, StrKeySize(pszKey), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32 CMapAccess::GetStringInt(char* pszKey, int32 iNullValue)
{
	int32* pi;

	pi = (int32*)Get(pszKey, StrKeySize(pszKey), NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CMapAccess::GetStringLong(char* pszKey, int64 lliNullValue)
{
	int64* plli;

	plli = (int64*)Get(pszKey, StrKeySize(pszKey), NULL);
	if (plli)
	{
		return *plli;
	}
	else
	{
		return lliNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetStringPtr(char* pszKey)
{
	void* pv;

	pv = Get(pszKey, StrKeySize(pszKey), NULL);
	if (pv)
	{
		return pv;
	}
	else
	{
		return NULL;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
char* CMapAccess::GetKeyString(void* pvKey, size iKeySize)
{
	return GetString(pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CMapAccess::GetKeyData(void* pvKey, size iKeySize, size* piDataSize)
{
	return Get(pvKey, iKeySize, piDataSize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int16 CMapAccess::GetKeyShort(void* pvKey, size iKeySize, int16 iNullValue)
{
	int16*	pi;

	pi = (int16*)Get(pvKey, iKeySize, NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int32 CMapAccess::GetKeyInt(void* pvKey, size iKeySize, int32 iNullValue)
{
	int32*	pi;

	pi = (int32*)Get(pvKey, iKeySize, NULL);
	if (pi)
	{
		return *pi;
	}
	else
	{
		return iNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int64 CMapAccess::GetKeyLong(void* pvKey, size iKeySize, int64 lliNullValue)
{
	int64* plli;

	plli = (int64*)Get(pvKey, iKeySize, NULL);
	if (plli)
	{
		return *plli;
	}
	else
	{
		return lliNullValue;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::HasLong(int64 lliKey)
{
	return Has(&lliKey, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::HasShort(int16 iKey)
{
	return Has(&iKey, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::HasInt(int32 iKey)
{
	return Has(&iKey, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::HasString(char* pszKey)
{
	return Has(pszKey, StrKeySize(pszKey));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::HasKey(void* pvKey, size iKeySize)
{
	return Has(pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::DeleteLong(int64 lliKey)
{
	return Remove(&lliKey, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::DeleteShort(int16 iKey)
{
	return Remove(&iKey, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::DeleteInt(int32 iKey)
{
	return Remove(&iKey, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::DeleteString(char* pszKey)
{
	return Remove(pszKey, StrKeySize(pszKey));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CMapAccess::DeleteKey(void* pvKey, size iKeySize)
{
	return Remove(pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CMapAccess::DataSizeInt(int16 iKey)
{
	return DataSize(&iKey, sizeof(int16));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CMapAccess::DataSizeShort(int32 iKey)
{
	return DataSize(&iKey, sizeof(int32));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CMapAccess::DataSizeLong(int64 lliKey)
{
	return DataSize(&lliKey, sizeof(int64));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CMapAccess::DataSizeString(char* pszKey)
{
	return DataSize(pszKey, StrKeySize(pszKey));
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size CMapAccess::DataSizeKey(void* pvKey, size iKeySize)
{
	return DataSize(pvKey, iKeySize);
}


