#ifndef __INDEX_TREE_TEMPLATE_H__
#define __INDEX_TREE_TEMPLATE_H__
#include "IndexTree.h"


template<class M>
class CIndexTreeTemplate : public CIndexTree
{
public:
	M*		Get(char* pszKey);
	M*		Get(void* pvKey, int iKeySize);

	BOOL	Put(M* pvObject, char* pszKey);
	BOOL	Put(M* pvObject, void* pvKey, int iKeySize);

	BOOL	Remove(char* pszKey);
	BOOL	Remove(void* pvKey, int iKeySize);
};


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
M* CIndexTreeTemplate<M>::Get(char* pszKey)
{
	return (M*)CIndexTree::Get(pszKey);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
M* CIndexTreeTemplate<M>::Get(void* pvKey, int iKeySize)
{
	return (M*)CIndexTree::Get(pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
BOOL CIndexTreeTemplate<M>::Put(M* pvObject, char* pszKey)
{
	return CIndexTree::Put(pvObject, sizeof(M), pszKey);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
BOOL CIndexTreeTemplate<M>::Put(M* pvObject, void* pvKey, int iKeySize)
{
	return CIndexTree::Put(pvObject, sizeof(M), pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
BOOL CIndexTreeTemplate<M>::Remove(char* pszKey)
{
	return CIndexTree::Remove(pszKey);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
template<class M>
BOOL CIndexTreeTemplate<M>::Remove(void* pvKey, int iKeySize)
{
	return CIndexTree::Remove(pvKey, iKeySize);
}


#endif // __INDEX_TREE_TEMPLATE_H__

