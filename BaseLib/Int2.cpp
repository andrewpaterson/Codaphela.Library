#include "DataIO.h"
#include "Int2.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2::SInt2()
{
	x = 0;
	y = 0;
}

//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2::SInt2(const SInt2& v)
{
	x = v.x;
	y = v.y;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2::SInt2(int fx, int fy)
{
	x = fx;
	y = fy;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool SInt2::operator == (const SInt2& v) const
{
	return x == v.x && y == v.y;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2 SInt2::operator + (const SInt2& v) const
{
	return SInt2(x + v.x, y + v.y);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2 SInt2::operator - (const SInt2& v) const
{
	return SInt2(x - v.x, y - v.y);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2& SInt2::operator += (const SInt2& v)
{
	x += v.x;
	y += v.y;
	return *this;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
SInt2& SInt2::operator -= (const SInt2& v)
{
	x -= v.x;
	y -= v.y;
	return *this;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void SInt2::Init(int x, int y)
{
	this->x = x;
	this->y = y;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void SInt2::Init(const SInt2& v)
{
	x = v.x;
	y = v.y;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void SInt2::Zero(void)
{
	x = 0;
	y = 0;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool SInt2::Save(CFileWriter* pcFile)
{
	ReturnOnFalse(pcFile->WriteInt(x));
	ReturnOnFalse(pcFile->WriteInt(y));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool SInt2::Load(CFileReader* pcFile)
{
	ReturnOnFalse(pcFile->ReadInt(&x));
	ReturnOnFalse(pcFile->ReadInt(&y));
	return true;
}

