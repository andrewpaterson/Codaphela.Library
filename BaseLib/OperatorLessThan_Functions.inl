void LessThanIntInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(int*)pvRight); }
void LessThanIntShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(int16*)pvRight); }
void LessThanIntChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(char*)pvRight); }
void LessThanIntFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(float*)pvRight); }
void LessThanIntDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(double*)pvRight); }
void LessThanIntLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int*)pvLeft < *(int64*)pvRight); }
void LessThanShortInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(int*)pvRight); }
void LessThanShortShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(int16*)pvRight); }
void LessThanShortChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(char*)pvRight); }
void LessThanShortFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(float*)pvRight); }
void LessThanShortDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(double*)pvRight); }
void LessThanShortLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int16*)pvLeft < *(int64*)pvRight); }
void LessThanCharInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(int*)pvRight); }
void LessThanCharShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(int16*)pvRight); }
void LessThanCharChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(char*)pvRight); }
void LessThanCharFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(float*)pvRight); }
void LessThanCharDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(double*)pvRight); }
void LessThanCharLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(char*)pvLeft < *(int64*)pvRight); }
void LessThanFloatInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(int*)pvRight); }
void LessThanFloatShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(int16*)pvRight); }
void LessThanFloatChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(char*)pvRight); }
void LessThanFloatFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(float*)pvRight); }
void LessThanFloatDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(double*)pvRight); }
void LessThanFloatLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(float*)pvLeft < *(int64*)pvRight); }
void LessThanDoubleInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(int*)pvRight); }
void LessThanDoubleShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(int16*)pvRight); }
void LessThanDoubleChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(char*)pvRight); }
void LessThanDoubleFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(float*)pvRight); }
void LessThanDoubleDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(double*)pvRight); }
void LessThanDoubleLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(double*)pvLeft < *(int64*)pvRight); }
void LessThanUIntUInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned int*)pvLeft < *(unsigned int*)pvRight); }
void LessThanUIntUShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned int*)pvLeft < *(uint16*)pvRight); }
void LessThanUIntUChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned int*)pvLeft < *(unsigned char*)pvRight); }
void LessThanUIntULong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned int*)pvLeft < *(uint64*)pvRight); }
void LessThanUShortUInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint16*)pvLeft < *(unsigned int*)pvRight); }
void LessThanUShortUShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint16*)pvLeft < *(uint16*)pvRight); }
void LessThanUShortUChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint16*)pvLeft < *(unsigned char*)pvRight); }
void LessThanUShortULong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint16*)pvLeft < *(uint64*)pvRight); }
void LessThanUCharUInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned char*)pvLeft < *(unsigned int*)pvRight); }
void LessThanUCharUShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned char*)pvLeft < *(uint16*)pvRight); }
void LessThanUCharUChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned char*)pvLeft < *(unsigned char*)pvRight); }
void LessThanUCharULong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(unsigned char*)pvLeft < *(uint64*)pvRight); }
void LessThanLongInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(int*)pvRight); }
void LessThanLongShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(int16*)pvRight); }
void LessThanLongChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(char*)pvRight); }
void LessThanLongFloat(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(float*)pvRight); }
void LessThanLongDouble(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(double*)pvRight); }
void LessThanLongLong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(int64*)pvLeft < *(int64*)pvRight); }
void LessThanULongUInt(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint64*)pvLeft < *(unsigned int*)pvRight); }
void LessThanULongUShort(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint64*)pvLeft < *(uint16*)pvRight); }
void LessThanULongUChar(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint64*)pvLeft < *(unsigned char*)pvRight); }
void LessThanULongULong(bool* pvDest, void* pvLeft, void* pvRight) { *pvDest = (bool)(*(uint64*)pvLeft < *(uint64*)pvRight); }
