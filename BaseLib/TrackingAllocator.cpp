#include "TrackingAllocator.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTrackingAllocator::Init(CMallocator* pcAlloc)
{
	mpcAlloc = pcAlloc;
	mapv.Init(sizeof(void*), &ComparePtrPtr);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTrackingAllocator::Kill(void)
{
	mapv.Kill();
	mpcAlloc = NULL;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
int CTrackingAllocator::AllocatedCount(void)
{
	return mapv.NumElements();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CTrackingAllocator::Malloc(size_t tSize)
{
	void*	pv;

	pv = mpcAlloc->Malloc(tSize);
	mapv.Add(&pv);

	return pv;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void* CTrackingAllocator::Realloc(void* pv, size_t tSize)
{
	void*	pvNew;

	pvNew = mpcAlloc->Realloc(pv, tSize);
	if (pvNew != pv)
	{
		mapv.Remove(&pv);
	}
	mapv.Add(&pvNew);

	return pvNew;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTrackingAllocator::Free(void* pv)
{
	mpcAlloc->Free(pv);
	mapv.Remove(&pv);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
const char* CTrackingAllocator::GetName(void)
{
	return mpcAlloc->GetName();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTrackingAllocator::IsLocal(void)
{
	return mpcAlloc->IsLocal();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size_t CTrackingAllocator::SizeOffset(void)
{
	return mpcAlloc->SizeOffset();
}

