/** ---------------- COPYRIGHT NOTICE, DISCLAIMER, and LICENSE ------------- **

Copyright (c) 2022 Andrew Paterson

This file is part of The Codaphela Project: Codaphela BaseLib

Codaphela BaseLib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Codaphela BaseLib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Codaphela BaseLib.  If not, see <http://www.gnu.org/licenses/>.

Microsoft Windows is Copyright Microsoft Corporation

** ------------------------------------------------------------------------ **/
#include <string.h>
#include "FileReader.h"
#include "IntegerHelper.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadData(void* pvData, filePos iDataSize)
{
	CheckRead(pvData, iDataSize);
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadStringLength(int* piLength)
{
	CheckRead(piLength, sizeof(int));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadStringChars(char* szString, int iLength)
{
	CheckRead(szString, iLength);
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadString(char* szString, int iMaxLength)
{
	int		iLength;

	if (!ReadStringLength(&iLength))
	{
		return false;
	}

	if (iLength > iMaxLength - 1)
	{
		iLength = iMaxLength - 1;
	}

	if (!ReadStringChars(szString, iLength))
	{
		return false;
	}
	szString[iLength] = 0;
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(int32* pi)
{
	CheckRead(pi, sizeof(int32));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(uint32* pui)
{
	CheckRead(pui, sizeof(uint32));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(int64* plli)
{
	CheckRead(plli, sizeof(int64));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(uint64* pulli)
{
	CheckRead(pulli, sizeof(uint64));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadFloat(float32* pf)
{
	CheckRead(pf, sizeof(float32));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadFloat(float64* pf)
{
	CheckRead(pf, sizeof(float64));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadChar(char8* pc)
{
	CheckRead(pc, sizeof(char));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadChar(char16* pc)
{
	CheckRead(pc, sizeof(char16));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadBool(bool* pb)
{
	CheckRead(pb, sizeof(bool));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(int16* pi)
{
	CheckRead(pi, sizeof(int16));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(uint16* pi)
{
	CheckRead(pi, sizeof(uint16));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(int8* pi)
{
	CheckRead(pi, sizeof(int8));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadInt(uint8* pi)
{
	CheckRead(pi, sizeof(uint8));
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadBits(void* pvData, int iByteLength)
{
	CheckRead(pvData, iByteLength);
	return true;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
bool CFileReader::ReadIntArray(int* pai, int iLength)
{
	CheckRead(pai, iLength * sizeof(int));
	return true;
}
