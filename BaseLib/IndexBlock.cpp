#include "IndexBlock.h"


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CIndexBlock::Init(void)
{
	mcIndex.Init();
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CIndexBlock::Init(CIndexTreeConfig* pcConfig)
{
	mcIndex.Init(pcConfig);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void CIndexBlock::Kill(void)
{
	mcIndex.Kill();
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Get(void* pvKey, int iKeySize, void** ppvData, size_t* piDataSize)
{
	void*	pvData;

	pvData = mcIndex.Get(pvKey, iKeySize, piDataSize);
	if (pvData)
	{
		SafeAssign(ppvData, pvData);
		return TRUE;
	}
	else
	{
		return FALSE;
	}
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void* CIndexBlock::Get(void* pvKey, int iKeySize)
{
	void* pvData;

	pvData = mcIndex.Get(pvKey, iKeySize, NULL);
	return pvData;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
void* CIndexBlock::Put(void* pvKey, int iKeySize, size_t iDataSize)
{
	void*	pvData;

	pvData = mcIndex.Put(pvKey, iKeySize, NULL, iDataSize);
	return pvData;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Put(void* pvKey, int iKeySize, void* pvData, size_t iDataSize)
{
	pvData = mcIndex.Put(pvKey, iKeySize, pvData, iDataSize);
	return pvData != NULL;
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Remove(void* pvKey, int iKeySize)
{
	return mcIndex.Remove(pvKey, iKeySize);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
int CIndexBlock::NumElements(void)
{
	return mcIndex.NumElements();
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::StartIteration(SIndexTreeMemoryIterator* psIterator, void** pvKey, void** pvData)
{
	return mcIndex.StartUnsafeIteration(psIterator, pvData, NULL);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Iterate(SIndexTreeMemoryIterator* psIterator, void** pvKey, void** pvData)
{
	return mcIndex.UnsafeIterate(psIterator, pvData, NULL);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Write(CFileWriter* pcFileWriter)
{
	return mcIndex.Write(pcFileWriter);
}


//////////////////////////////////////////////////////////////////////////
//																		//
//																		//
//////////////////////////////////////////////////////////////////////////
BOOL CIndexBlock::Read(CFileReader* pcFileReader)
{
	return mcIndex.Read(pcFileReader);
}

