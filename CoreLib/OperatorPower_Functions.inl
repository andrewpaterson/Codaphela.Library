void PowerIntIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerIntULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerIntULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerIntULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerIntULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerIntULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerIntULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerIntULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerIntULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerIntULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerIntULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(int*)pvDest = (int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerShortULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerShortULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerShortULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerShortULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerShortULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerShortULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerShortULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerShortULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerShortULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerShortULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(short*)pvDest = (short)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerCharULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerCharULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerCharULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerCharULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerCharULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerCharULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerCharULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerCharULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerCharULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerCharULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(char*)pvDest = (char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerFloatULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerFloatULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerFloatULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerFloatULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerFloatULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerFloatULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerFloatULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerFloatULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerFloatULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerFloatULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(float*)pvDest = (float)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerDoubleULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerDoubleULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerDoubleULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerDoubleULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerDoubleULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerDoubleULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerDoubleULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerDoubleULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerDoubleULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerDoubleULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(double*)pvDest = (double)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUIntULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUIntULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUIntULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUIntULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUIntULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUIntULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUIntULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUIntULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUIntULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUIntULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned int*)pvDest = (unsigned int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUShortULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUShortULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUShortULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUShortULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUShortULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUShortULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUShortULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUShortULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUShortULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUShortULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(uint16*)pvDest = (uint16)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerUCharULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerUCharULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerUCharULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerUCharULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerUCharULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerUCharULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerUCharULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerUCharULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerUCharULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerUCharULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned char*)pvDest = (unsigned char)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerLongULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerLongULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerLongULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerLongULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerLongULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerLongULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerLongULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerLongULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerLongULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerLongULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(long long int*)pvDest = (long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(short*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongFloatInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongFloatShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongFloatChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongFloatFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongFloatDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongFloatUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongFloatUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongFloatUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongFloatLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongFloatULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(float*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongDoubleInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongDoubleShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongDoubleChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongDoubleFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongDoubleDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongDoubleUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongDoubleUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongDoubleUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongDoubleLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongDoubleULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(double*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongUIntInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongUIntShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongUIntChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongUIntFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongUIntDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongUIntUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongUIntUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongUIntUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongUIntLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongUIntULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongUShortInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongUShortShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongUShortChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongUShortFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongUShortDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongUShortUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongUShortUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongUShortUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongUShortLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongUShortULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(uint16*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongUCharInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongUCharShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongUCharChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongUCharFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongUCharDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongUCharUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongUCharUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongUCharUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongUCharLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongUCharULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned char*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongLongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongLongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongLongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongLongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongLongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongLongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongLongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongLongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongLongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongLongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
void PowerULongULongInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(int*)pvRight))); }
void PowerULongULongShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(short*)pvRight))); }
void PowerULongULongChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(char*)pvRight))); }
void PowerULongULongFloat(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(float*)pvRight))); }
void PowerULongULongDouble(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(double*)pvRight))); }
void PowerULongULongUInt(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned int*)pvRight))); }
void PowerULongULongUShort(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(uint16*)pvRight))); }
void PowerULongULongUChar(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned char*)pvRight))); }
void PowerULongULongLong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(long long int*)pvRight))); }
void PowerULongULongULong(void* pvDest, void* pvLeft, void* pvRight) { *(unsigned long long int*)pvDest = (unsigned long long int)((double)pow((double)(*(unsigned long long int*)pvLeft), (double)(*(unsigned long long int*)pvRight))); }
