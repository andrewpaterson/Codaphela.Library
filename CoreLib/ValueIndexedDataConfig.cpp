#include "ValueIndexedDataConfig.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CValueIndexedDataConfig::Init(char* szWorkingDirectory, char* szRewriteDirectory, size_t uiDataCacheSize, size_t uiIndexCacheSize, EIndexWriteThrough eWriteThrough)
{
	Init(szWorkingDirectory, szRewriteDirectory, uiDataCacheSize, uiIndexCacheSize, eWriteThrough, NULL, NULL);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CValueIndexedDataConfig::Init(char* szWorkingDirectory, char* szRewriteDirectory, size_t uiDataCacheSize, size_t uiIndexCacheSize, EIndexWriteThrough eWriteThrough, CIndexTreeEvictionCallback* pcIndexEvictionUserCallback, CIndexedEvictionCallback* pcEvictionUserCallback)
{
	mcDurableFileController.Init(szWorkingDirectory, szRewriteDirectory);

	muiDataCacheSize = uiDataCacheSize;
	muiIndexCacheSize = uiIndexCacheSize;
	meWriteThrough = eWriteThrough;
	mpcIndexEvictionUserCallback = pcIndexEvictionUserCallback;
	mpcEvictionUserCallback = pcEvictionUserCallback;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CValueIndexedDataConfig::Kill(void)
{
	mcDurableFileController.Kill();
	CIndexedDataConfig::Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CDurableFileController* CValueIndexedDataConfig::GetDurableFileControl(void)
{
	return &mcDurableFileController;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size_t CValueIndexedDataConfig::GetDataCacheSize(void)
{
	return muiDataCacheSize;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
size_t CValueIndexedDataConfig::GetIndexCacheSize(void)
{
	return muiIndexCacheSize;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
EIndexWriteThrough CValueIndexedDataConfig::GetWriteThrough(void)
{
	return meWriteThrough;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CIndexTreeEvictionCallback* CValueIndexedDataConfig::GetIndexEvictionUserCallback(void)
{
	return mpcIndexEvictionUserCallback;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
CIndexedEvictionCallback* CValueIndexedDataConfig::GetEvictionUserCallback(void)
{
	return mpcEvictionUserCallback;
}

