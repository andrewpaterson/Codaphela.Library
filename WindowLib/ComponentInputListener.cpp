#include "ComponentInput.h"
#include "ComponentInputListener.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::Init(CComponentInput* pcComponentInput)
{
	mpcComponentInput = pcComponentInput;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ButtonPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ButtonPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ButtonReleased(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ButtonReleased(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::NumpadButtonPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->NumpadButtonPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ShiftPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ShiftPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ShiftReleased(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ShiftReleased(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ControlPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ControlPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::ControlReleased(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->ControlReleased(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::AltPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->AltPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::AltReleased(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->AltReleased(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::CapsLockPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->CapsLockPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::NumLockPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->NumLockPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::InsertPressed(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->InsertPressed(pcSource, pvContext);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CComponentInputListener::PointerMotion(CUnknown* pcSource, void* pvContext)
{
	mpcComponentInput->PointerMotion(pcSource, pvContext);
}

