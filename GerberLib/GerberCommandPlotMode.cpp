#include "GerberCommandPlotMode.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CGerberCommandPlotMode::Init(EGerberCommandEnum eType, EGerberPlotMode eMode)
{
	CGerberCommand::Init(eType);
	meMode = eMode;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CGerberCommandPlotMode::Kill(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGerberCommandPlotMode::IsPlotMode(void)
{
	return true;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGerberCommandPlotMode::IsLinear(void)
{
	return meMode == GPM_Linear;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGerberCommandPlotMode::IsCircular(void)
{
	return	meMode == GPM_CircularClockwise || 
			meMode == GPM_CircularAnticlockwise;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGerberCommandPlotMode::IsClockwise(void)
{
	return meMode == GPM_CircularClockwise;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
bool CGerberCommandPlotMode::IsAnticlockwise(void)
{
	return	meMode == GPM_CircularAnticlockwise;
}


